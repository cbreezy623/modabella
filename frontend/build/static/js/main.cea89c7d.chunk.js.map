{"version":3,"sources":["components/Appointment/AppointmentTableEntry.tsx","components/Api/Api.tsx","components/Appointment/AppointmentTable.tsx","components/Shared/DateRange.tsx","components/Pages/Appointments.tsx","components/Customer/CustomerCard.tsx","components/Customer/CustomerCardList.tsx","components/Shared/AddAccordion.tsx","components/Customer/CustomerForm.tsx","components/Customer/NewCustomerForm.tsx","components/Pages/Customers.tsx","components/Pages/Home.tsx","components/Product/ProductCard.tsx","components/Product/ProductCardList.tsx","components/Product/ProductForm.tsx","components/Product/NewProductForm.tsx","components/Product/BrandCard.tsx","components/Product/BrandCardList.tsx","components/Product/NewBrandForm.tsx","components/Pages/Products.tsx","components/Service/ServiceCard.tsx","components/Service/ServiceCardList.tsx","components/Service/ModifierCardList.tsx","components/Service/ServiceForm.tsx","components/Service/NewServiceForm.tsx","components/Service/ModifierForm.tsx","components/Service/NewModifierForm.tsx","components/Service/CategoryCardList.tsx","components/Service/NewCategoryForm.tsx","components/Pages/Services.tsx","components/Common/Navbar.tsx","components/Customer/UpdateCustomerForm.tsx","components/Customer/Customer.tsx","components/Sales/Tables/PSalesTableEntry.tsx","components/Sales/Tables/PSalesTable.tsx","components/Sales/PSales.tsx","components/Sales/Tables/SSalesTableEntry.tsx","components/Sales/Tables/SSalesTable.tsx","components/Sales/SSales.tsx","components/Sales/Tables/SMSalesTableEntry.tsx","components/Sales/Tables/SMSalesTable.tsx","components/Sales/SMSales.tsx","components/Sales/SalesTabs.tsx","components/Pages/Sales.tsx","components/Calendar/Calendar.tsx","components/Pages/CalendarPage.tsx","components/Appointment/SaleForm.tsx","components/Appointment/ServiceSaleForm.tsx","components/Appointment/ProductSaleForm.tsx","components/Appointment/SplitForm.tsx","components/Appointment/SelectPaymentForm.tsx","components/Appointment/Appointment.tsx","components/Product/UpdateProductForm.tsx","components/Product/Product.tsx","components/Service/ConnectModifierForm.tsx","components/Service/ConnectModifier.tsx","components/Service/UpdateServiceForm.tsx","components/Service/Service.tsx","components/Sales/PSale.tsx","components/Sales/SSale.tsx","components/Service/UpdateModifierForm.tsx","components/Service/Modifier.tsx","components/Common/Footer.tsx","components/App/App.tsx","serviceWorker.js","index.tsx"],"names":["AppointmentTableEntry","props","state","entry","this","id","c_id","first_name","last_name","startDate","endDate","cash","card","check","p_sub","tax","s_sub","total","Number","render","history","style","textAlign","key","onClick","push","moment","format","toFixed","Component","ROOT","removeCustomerID","customer","phone","email","notes","removeModifierID","modifier","name","price","removeServiceID","service","category","removeProductID","product","brand","process","res","json","a","fetch","start","end","newEnd","endOf","appointment","getAllBrands","getAllCategories","getAllModifiers","getServModsByService","csrftoken","data","rRule","method","credentials","headers","body","JSON","stringify","servmod","psale","ssale","postTotals","totals","updated","putTotals","getCookie","document","cookieValue","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","AppointmentTable","isRanged","setEntries","forEach","Math","round","setState","entries","refreshList","getAppointmentEntries","then","catch","err","console","log","refreshRanged","getAppointmentEntriesRange","refreshCustomerEntries","undefined","getAppointmentEntriesCustomer","subtotal","b","isBefore","sort","compareByDate","map","grand","Table","striped","bordered","hover","size","colSpan","DateRange","onChange","now","Date","first","getTime","getDay","next","componentDidMount","d","pickerChange","text","toLowerCase","newTime","ftime","fptime","picker","date","time","defaultValue","display","margin","Appointments","obj","dateWidget","padding","to","Button","variant","CustomerCard","customer_page","Card","minWidth","maxWidth","Body","Title","Footer","CustomerCardList","getAllCustomers","cardList","cards","compareByName","CardDeck","flexWrap","AddAccordion","header","Header","backgroundColor","borderColor","Accordion","Toggle","as","eventKey","collapse","Collapse","border","form","CustomerForm","getData","addCustomer","window","location","reload","alert","event","target","value","handleSubmit","preventDefault","request","updateCustomer","Form","onSubmit","Label","Control","placeholder","type","NewCustomerForm","Customers","Home","ProductCard","url","Text","ProductCardList","getAllProducts","compareCards","localeCompare","ProductForm","addProduct","updateProduct","getBrands","brands","objNameSort","an","toUpperCase","bn","brandRow","arr","Row","Group","item","NewProductForm","BrandCard","BrandCardList","NewBrandForm","addBrand","Products","ServiceCard","disconnectModifier","servmodID","s_id","getServModByBoth","handleClick","button","service_page","categoryName","cardStyle","footer","ServiceCardList","getAllServices","ModifierCardList","ServiceForm","addService","updateService","getCategories","categories","onChangeCategory","categoryRow","c","EMPTY_SERVICE","NewServiceForm","ModifierForm","addModifier","updateModifier","EMPTY_MODIFIER","NewModifierForm","CategoryCardList","NewCategoryForm","addCategory","Services","linkStyle","fontSize","home","items","Bar","title","charAt","slice","Nav","element","UpdateCustomerForm","Customer","refreshCustomerInfo","getCustomer","loaded","match","params","f","PSalesTableEntry","quantity","unitSalePrice","unitTax","PSalesTable","getPSalesByAppointment","details","getAllPSalesDetailed","rows","reverse","PSales","SsalesTableEntry","salePrice","SsalesTable","getSSalesByAppointment","getAllSSalesDetailed","SSalesTableEntry","SSales","SSalesTable","SMSalesTableEntry","service_sale","SMSalesTable","getAllSMSales","filter","e","SMSales","SalesTabs","Tabs","defaultActiveKey","transition","Tab","Sales","currentDate","Calendar","commitChanges","added","changed","deleted","startingAddedId","addAppointment","updateAppointments","deleteAppointment","resources","getCustomers","getAppointments","getAllAppointments","getAllSchedulerCustomers","fieldName","instances","updateAppointment","Paper","defaultCurrentViewName","defaultCurrentDate","onCommitChanges","startDayHour","endDayHour","showOpenButton","showDeleteButton","showCloseButton","mainResourceName","CalendarPage","SaleForm","priceRef","getItem","saleId","addSale","handleNewServices","group","sale","services","getServMods","current","getServices","getServiceByCategory","handleNewServMods","prices","checked","parseFloat","modPrices","servmods","handleNewProducts","products","getProducts","getProductsByBrand","handleCategories","handleBrands","handleChecked","index","oldVal","change","newVal","onChangeSale","saleOption","itemRow","productRow","serviceRow","modifierRow","Check","label","quantityRow","min","priceRow","ref","paymentRow","payment","React","createRef","ServiceSaleForm","find","addSSale","ProductSaleForm","addPSale","SplitForm","splitTotal","abs","blockNav","cashRow","cardRow","checkRow","when","message","SelectPaymentForm","post","onChangePayment","default","getTotals","Appointment","defaultPayment","num","roundAndFix","handlePromises","s_subtotal","p_subtotal","p","s","rounded","roundedSubtotal","roundedTax","loadData","p1","getAppointmentDetails","p2","getAppointmentPSales","p3","getAppointmentSSales","p4","getAppointmentTotals","Promise","all","rightJustifyRow","justifyContent","sForm","pForm","sAccordion","pAccordion","values","Container","fluid","Col","md","UpdateProductForm","EMPTY_PRODUCT","Product","getProduct","ConnectModifierForm","getModifiers","modifiers","connectModifier","mod","modID","addServMod","parseInt","ConnectModifier","UpdateServiceForm","Service","serviceAccordion","getServiceInfo","getServmods","getService","PSale","getPSale","deleteSale","href","table","getPSaleDetailed","SSale","getSSale","getSSaleDetailed","UpdateModifierForm","Modifier","getModifier","Moment","locale","momentLocalizer","App","path","component","exact","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.cea89c7d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport moment from 'moment';\n\ninterface prop { entry: appointmentTableEntry }\ninterface state { entry: appointmentTableEntry }\n\nclass AppointmentTableEntry extends Component<prop, state>{\n    constructor(props: prop){\n        super(props);\n        this.state = {\n            entry: props.entry,\n        };\n    }\n\n    render() {\n        let { id, c_id, first_name, last_name, startDate, endDate, cash, card, check, p_sub, tax, s_sub } = this.state.entry;\n        let total = Number(cash) + Number(card) + Number(check)\n        const row = () => ( <Route render={({ history }) => (\n            <tr style={{textAlign:\"right\"}} key={ id } onClick={ () => { history.push(`/appointment/${this.state.entry.id}`)} }>\n                <td>{ id }</td>\n                <td>{ c_id }</td>\n                <td>{ first_name }</td>\n                <td>{ last_name }</td>\n                <td>{ moment(startDate).format('ll') } </td>\n                <td>{ moment(startDate).format('LT') }</td>\n                <td>{ moment(endDate).format('LT') }</td>\n                <td>${ Number(cash).toFixed(2) }</td>\n                <td>${ Number(card).toFixed(2) }</td>\n                <td>${ Number(check).toFixed(2) }</td>\n                <td>${ Number(p_sub).toFixed(2) }</td>\n                <td>${ Number(tax).toFixed(2) }</td>\n                <td>${ Number(s_sub).toFixed(2) }</td>\n                <td>${ Number(total).toFixed(2) }</td>\n            </tr>\n        )} />);\n        \n        return row();\n    }\n}\n\nexport default AppointmentTableEntry","import moment from 'moment';\nimport 'whatwg-fetch';\n\nconst ROOT = `/api`;\n\n// local functions\n\nfunction removeCustomerID(customer: customer) : newCustomer {\n    return ({\n        first_name: customer.first_name,\n        last_name: customer.last_name,\n        phone: customer.phone,\n        email: customer.email,\n        notes: customer.notes,\n    });\n}\n\nfunction removeModifierID(modifier: modifier) :newModifier {\n    return ({\n        name: modifier.name,\n        price: modifier.price,\n    })\n}\n\nfunction removeServiceID(service: service) : newService {\n    return ({\n        name: service.name,\n        price: service.price,\n        category: service.category,\n    });\n}\n\nfunction removeProductID(product: product) : newProduct {\n    return ({\n        name: product.name,\n        price: product.price,\n        brand: product.brand,\n    })\n}\n\nfunction process(res: any) { return res.json() }\n\n// get requests\n\nexport async function getAppointment(id: number) {\n    const res = await fetch(`${ROOT}/schedulerAppointments/${id}`);\n    return process(res);\n}\n\nexport async function getAppointmentPSales(id: number) {\n    const res = await fetch(`${ROOT}/psales/?appointment=${id}`);\n    return process(res);\n}\n\nexport async function getAppointmentSSales(id: number) {\n    const res = await fetch(`${ROOT}/ssales/?appointment=${id}`);\n    return process(res);\n}\n\nexport async function getAppointmentEntries() {\n    const res = await fetch(`${ROOT}/appointmentEntries`);\n    return process(res);\n}\n\nexport async function getAppointmentEntriesRange(start: string, end: string) {\n    let newEnd = moment(end).endOf('day').format();\n    const res = await fetch(`${ROOT}/appointmentEntries?start=${moment(start).format()}&end=${newEnd}`);\n    return process(res);\n}\n\nexport async function getAppointmentEntriesCustomer(customer: number) {\n    const res = await fetch(`${ROOT}/appointmentEntries?customer=${customer}`);\n    return process(res);\n}\n\nexport async function getAppointmentDetails(id: number) {\n    const res = await fetch(`${ROOT}/schedulerAppointmentsDetails/${id}`);\n    return process(res);\n}\n\nexport async function getCustomer(id: number) {\n    const res = await fetch(`${ROOT}/customers/${id}`);\n    return process(res);\n}\n\nexport async function getModifier(id: number) {\n    const res = await fetch(`${ROOT}/modifiers/${id}`);\n    return process(res);\n}\n\nexport async function getProduct(id: number) {\n    const res = await fetch(`${ROOT}/products/${id}`);\n    return process(res);\n}\n\nexport async function getPSaleDetailed(id: number) {\n    const res = await fetch(`${ROOT}/psalesDetailed/${id}`);\n    return process(res);\n}\n\nexport async function getService(id: number) {\n    const res = await fetch(`${ROOT}/services/${id}`);\n    return process(res);\n}\n\nexport async function getSSaleDetailed(id: number) {\n    const res = await fetch(`${ROOT}/ssalesDetailed/${id}`);\n    return process(res);\n}\n\nexport async function getAppointmentTotals(appointment: number) {\n    const res = await fetch(`${ROOT}/appointmentsTotals/${appointment}`);\n    return process(res);\n}\n\n// get all\n\nexport async function getAllCustomers() {\n    const res = await fetch(`${ROOT}/customers/`);\n    return process(res);\n}\n\nexport async function getAllAppointments() {\n    const res = await fetch(`${ROOT}/schedulerAppointments`);\n    return process(res);\n}\n\nexport async function getAllBrands() {\n    const res = await fetch(`${ROOT}/brands/`);\n    return process(res);\n}\n\nexport async function getAllCategories() {\n    const res = await fetch(`${ROOT}/categories/`);\n    return process(res);\n}\n\nexport async function getAllModifiers() {\n    const res = await fetch(`${ROOT}/modifiers`);\n    return process(res);\n}\n\nexport async function getAllSchedulerCustomers() {\n    const res = await fetch(`${ROOT}/schedulerCustomers`);\n    return process(res);\n}\n\nexport async function getAllProducts() {\n    const res = await fetch(`${ROOT}/products`);\n    return process(res);\n}\n\nexport async function getAllPSalesDetailed() {\n    const res = await fetch(`${ROOT}/psalesDetailed`);\n    return process(res);\n}\n\nexport async function getAllServices(){\n    const res = await fetch(`${ROOT}/services`);\n    return process(res);\n}\n\nexport async function getAllSMSales(){\n    const res = await fetch(`${ROOT}/smsales`);\n    return process(res);\n}\n\nexport async function getAllSSalesDetailed() {\n    const res = await fetch(`${ROOT}/ssalesDetailed`);\n    return process(res);\n}\n\n// get queries\n\nexport async function getProductsByBrand(brand: number) {\n    const res = await fetch(`${ROOT}/products?brand=${brand}`);\n    return process(res);\n}\n\nexport async function getPSalesByAppointment(appointment: number) {\n    const res = await fetch(`${ROOT}/psalesDetailed/?appointment=${appointment}`);\n    return process(res);\n}\n\nexport async function getServiceByCategory(category: number) {\n    const res = await fetch(`${ROOT}/services?category=${category}`);\n    return process(res);\n}\n\nexport async function getSSalesByAppointment(appointment: number) {\n    const res = await fetch(`${ROOT}/ssalesDetailed/?appointment=${appointment}`);\n    return process(res);\n}\n\nexport async function getServModByBoth(service: number, modifier: number){\n    const res = await fetch(`${ROOT}/servmods/?service=${service}&modifier=${modifier}`);\n    return process(res);\n}\n\nexport async function getServModsByService(service: number) {\n    const res = await fetch(`${ROOT}/servmods/?service=${service}`);\n    return process(res);\n}\n\n// post requests\n\nexport async function addAppointment(appointment: appointment, csrftoken: string){\n    let data = appointment;\n    data.rRule = \"\";\n    const res = await fetch(`${ROOT}/schedulerAppointments/`, {\n        method: 'post',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data),\n    });\n    return process(res);\n}\n\nexport async function addBrand(brand: newBrand, csrftoken: string){\n    const res = await fetch(`${ROOT}/brands/`, {\n        method: 'post',\n        credentials: 'include',\n        body: JSON.stringify(brand),\n    });\n    return process(res);\n}\n\nexport async function addCategory(category: category, csrftoken: string){\n    const res = await fetch(`${ROOT}/categories/`, {\n        method: 'post',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(category),\n    });\n    return process(res);\n}\n\nexport async function addCustomer(customer: customer, csrftoken: string) {\n    const res = await fetch(`${ROOT}/customers/`, {\n        method: 'post',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(removeCustomerID(customer)),\n    });\n    return process(res);\n}\n\nexport async function addModifier(modifier: newModifier, csrftoken: string){\n    const res = await fetch(`${ROOT}/modifiers/`, {\n        method: 'post',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(modifier),\n    });\n    return process(res);\n}\n\nexport async function addServMod(servmod: servmod, csrftoken: string) {\n    const res = await fetch(`${ROOT}/servmods/`, {\n        method: 'post',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(servmod),\n    });\n    return process(res);\n}\n\nexport async function addPSale(psale: newPsale, csrftoken: string) {\n    const res = await fetch(`${ROOT}/psales/`, {\n        method: 'post',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(psale),\n    });\n    return process(res);\n}\n\nexport async function addSSale(ssale: newSsale, csrftoken: string ) {\n    const res = await fetch(`${ROOT}/ssales/`, {\n        method: 'post',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(ssale),\n    });\n    return process(res);\n}\n\nexport async function postTotals(totals: totals, csrftoken: string) {\n    const res = await fetch(`${ROOT}/appointmentsTotals/`, {\n        method: 'post',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(totals),\n    });\n    return process(res);\n}\n\nexport async function addProduct(product: product, csrftoken: string) {\n    const res = await fetch(`${ROOT}/products/`, {\n        method: 'post',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(removeProductID(product)),\n    });\n    return process(res);\n}\n\nexport async function addService(service: service, csrftoken: string) {\n    const res = await fetch(`${ROOT}/services/`, {\n        method: 'post',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(removeServiceID(service)),\n    });\n    return process(res);\n}\n\n// put requests\n\nexport async function updateAppointment(id: number, updated: any, csrftoken: string) {\n    const res = await fetch(`${ROOT}/schedulerAppointments/${id}/`, {\n        method: 'put',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updated),\n    });\n    return process(res);\n}\n\nexport async function updateCustomer(customer: customer, csrftoken: string) {\n    const res = await fetch(`${ROOT}/customers/${customer.id}/`, {\n        method: 'put',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(removeCustomerID(customer)),\n    });\n    return process(res);\n}\n\nexport async function updateModifier(modifier: modifier, csrftoken: string) {\n    const res = await fetch(`${ROOT}/modifiers/${modifier.id}/`, {\n        method: 'put',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(removeModifierID(modifier)),\n    });\n    return process(res);\n}\n\nexport async function updateProduct(product: product, csrftoken: string) {\n    const res = await fetch(`${ROOT}/products/${product.id}/`, {\n        method: 'put',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(removeProductID(product)),\n    });\n    return process(res);\n}\n\nexport async function updateService(service: service, csrftoken: string) {\n    const res = await fetch(`${ROOT}/services/${service.id}/`, {\n        method: 'put',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(removeServiceID(service)),\n    });\n    return process(res);\n}\n\nexport async function putTotals(totals: totals, csrftoken: string) {\n    const res = await fetch(`${ROOT}/appointmentsTotals/${totals.appointment}/`, {\n        method: 'put',\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(totals),\n    });\n    return process(res);\n}\n\n// delete requests\n\nexport function deleteAppointment(id: number, csrftoken: string) {\n    return fetch(`${ROOT}/schedulerAppointments/${id}/`, {\n        method: 'delete',\n        headers: { \"X-CSRFToken\": csrftoken }\n    });\n}\n\nexport function deletePSale(id: number, csrftoken: string) {\n    return fetch(`${ROOT}/psales/${id}`, {\n        method: 'delete',\n        headers: { \"X-CSRFToken\": csrftoken },\n    });\n}\n\nexport function deleteServmod(id: number, csrftoken: string){\n    return fetch(`${ROOT}/servmods/${id}`, {\n        method: 'delete',\n        headers: { \"X-CSRFToken\": csrftoken },\n    })\n}\n\nexport function deleteSSale(id: number, csrftoken: string) {\n    return fetch(`${ROOT}/ssales/${id}`, {\n        method: 'delete',\n        headers: { \"X-CSRFToken\": csrftoken },\n    });\n}\n\n// cookie\n\nexport function getCookie(document: Document, name: string) : string {\n    let cookieValue : string | null = null;\n    if(document.cookie && document.cookie !== ''){\n        const cookies = document.cookie.split(';');\n        for(let i = 0; i < cookies.length; i++){\n            const cookie = cookies[i].trim();\n            if(cookie.substring(0, name.length + 1) === (name + '=')){\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue ? cookieValue : \"\";\n}","import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport AppointmentTableEntry from './AppointmentTableEntry';\nimport moment from 'moment';\nimport { getAppointmentEntries, getAppointmentEntriesCustomer, getAppointmentEntriesRange } from '../Api/Api';\n\ntype propType = { id?: number; start?: string; end?: string }\ntype stateType = { c_id?: number; start?: string; end?: string; entries: Array<appointmentTableEntry>; totals: any};\n\nclass AppointmentTable extends Component<propType, stateType>{\n    constructor(props: propType){\n        super(props);\n        this.state = {\n            c_id: props.id,\n            start: props.start,\n            end: props.end,\n            entries: [],\n            totals: {\n                cash: 0,\n                card: 0,\n                check: 0,\n                tax: 0,\n                p_sub: 0,\n                s_sub: 0,\n                subtotal: 0,\n            }\n        };\n    }\n\n    componentDidMount(){\n        let start = this.props.start;\n        let end = this.props.end;\n        if(start === undefined || end === undefined){\n            if(this.state.c_id === undefined) {\n                this.refreshList();\n            } else {\n                this.refreshCustomerEntries();\n            }\n        }\n    }\n\n    componentDidUpdate(){\n        let start = this.props.start;\n        let end = this.props.end;\n        if(start && end && this.isRanged(start, end)){\n            this.setState({ start: start, end: end })\n            this.refreshRanged(start, end);\n        }\n    }\n\n    isRanged = (start: string, end: string) : boolean => {\n        return (\n            start !== \"\" && end !== \"\" &&\n            (start !== this.state.start || end !== this.state.end)\n        )\n    }\n\n    setEntries = (res: any) => {\n        let totals = { cash: 0, card: 0, check: 0, tax: 0, p_sub: 0, s_sub: 0 }\n        res.forEach( (entry: any) => {\n            totals.cash += Number(entry.cash);\n            totals.card += Number(entry.card);\n            totals.check += Number(entry.check);\n            totals.tax += Number(entry.tax);\n            totals.p_sub += Number(entry.p_sub);\n            totals.s_sub += Number(entry.s_sub);\n            totals.cash = (Math.round(totals.cash * 100) / 100);\n            totals.card = (Math.round(totals.card * 100) / 100);\n            totals.check = (Math.round(totals.check * 100) / 100);\n            totals.tax = (Math.round(totals.tax * 100) / 100);\n            totals.p_sub = (Math.round(totals.p_sub * 100) / 100);\n            totals.s_sub = (Math.round(totals.s_sub * 100) / 100);\n        });\n        this.setState({ entries: res, totals: totals });\n    }\n\n    refreshList = () => {\n        getAppointmentEntries()\n            .then(this.setEntries)\n            .catch(err => console.log(err));\n    }\n\n    refreshRanged = (start: string, end: string) => {\n        getAppointmentEntriesRange(start, end)\n            .then(this.setEntries)\n            .catch(err => console.log(err));\n    }\n\n    refreshCustomerEntries = () => {\n        if(this.state.c_id === undefined) return;\n        getAppointmentEntriesCustomer(this.state.c_id)\n            .then(this.setEntries)\n            .catch(err => console.log(err));\n    }\n\n    compareByDate(a: appointmentTableEntry, b: appointmentTableEntry) {\n        if(moment(a.startDate).isBefore(b.startDate)){ return 1; }\n        else if(moment(b.startDate).isBefore(a.startDate)){ return -1; }\n        else { return 0; }\n    }\n\n    render() {\n        let entries = this.state.entries\n            .sort(this.compareByDate)\n            .map((entry: appointmentTableEntry) => {\n                return (\n                    <AppointmentTableEntry\n                    key={entry.id}\n                    entry={entry}\n                    />\n                )\n            }\n        );\n        \n        let { cash, card, check, p_sub, s_sub, tax } = this.state.totals;\n        let grand = Number( cash + card + check ).toFixed(2);\n\n        return (\n            <Table striped bordered hover size=\"sm\">\n                <thead>\n                    <tr style={{textAlign:\"center\"}}>\n                        <th>AID</th>\n                        <th>CID</th>\n                        <th>First</th>\n                        <th>Last</th>\n                        <th>Date</th>\n                        <th>Start</th>\n                        <th>End</th>\n                        <th>Cash</th>\n                        <th>Card</th>\n                        <th>Check</th>\n                        <th>Products</th>\n                        <th>Tax</th>\n                        <th>Services</th>\n                        <th>Total</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    { entries }\n                    <tr style={{textAlign:\"right\"}}>\n                        <td colSpan={7}>Totals</td>\n                        <td>${ Number(cash).toFixed(2) }</td>\n                        <td>${ Number(card).toFixed(2) }</td>\n                        <td>${ Number(check).toFixed(2) }</td>\n                        <td>${ Number(p_sub).toFixed(2) }</td>\n                        <td>${ Number(tax).toFixed(2) }</td>\n                        <td>${ Number(s_sub).toFixed(2) }</td>\n                        <td>${ grand }</td>\n                    </tr>\n                </tbody>\n            </Table>\n        );\n    }\n}\n\nexport default AppointmentTable","import moment from 'moment';\nimport React, { Component } from 'react';\nimport { DateTimePicker } from 'react-widgets';\n\nconst DFORMAT = 'YYYY-MM-DD';\nconst DAY = 24*3600*1000;\n\nclass DateRange extends Component<any,any> {\n    onChange: (obj: any) => void;\n    constructor(props: any){\n        super(props);\n        this.state = {\n            start: \"\",\n            end: \"\",\n        };\n        this.onChange = props.onChange;\n    }\n\n    now = new Date();\n    first = new Date(this.now.getTime() - this.now.getDay()*DAY);\n    next = new Date(this.first.getTime() + 6*DAY);\n\n    componentDidMount = () => {\n        const start = moment(this.first).format(DFORMAT);\n        const end = moment(this.next).format(DFORMAT);\n        const d = { start: start, end: end };\n        this.setState(d);\n        this.onChange(d);\n    }\n\n    pickerChange = (text: string) => {\n        text = text.toLowerCase();\n        const onChange = (newTime: any) => {\n            const ftime = moment(newTime).format(DFORMAT);\n            let d = { [text]: ftime }\n            this.setState(d);\n            if(text === 'end' && newTime){\n                const fptime = moment(newTime.getTime()).format(DFORMAT);\n                d = { [text]: fptime}\n            }\n            this.onChange(d);\n        }\n\n        return onChange;\n    }\n\n    picker = (date: any, text: string) => {\n        const onChange = this.pickerChange(text);\n\n        return (\n            <div>\n                <h5>{ text }</h5>\n                <DateTimePicker\n                    time={false}\n                    defaultValue={date}\n                    onChange={ onChange }\n                />\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div style={{ display: \"flex\", margin: \"0rem 0rem 1rem 0rem\" }}>\n                { this.picker(this.first, 'Start') }\n                { this.picker(this.next, 'End') }\n            </div>\n        );\n    }\n}\n\nexport default DateRange;","import React, { Component } from 'react';\nimport AppointmentTable from '../Appointment/AppointmentTable';\nimport Button from 'react-bootstrap/Button';\nimport DateRange from '../Shared/DateRange';\n\nimport 'react-widgets/dist/css/react-widgets.css'\nimport { Link } from 'react-router-dom';\n\nclass Appointments extends Component<any,any> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            start: \"\",\n            end: \"\",\n        };\n    }\n\n    picker = () => {\n        \n    }\n\n    onChange = (obj: any) => {\n        this.setState(obj)\n    }\n\n    render() {\n        const divStyle = {\n            padding: \"1rem 0rem\"\n        }\n        const dateWidget = (\n            <DateRange onChange={ this.onChange }/>\n        )\n\n        return (\n            <div>\n                <h1>Appointments</h1>\n                <div style={divStyle}>\n                    <Link to='/calendar'>\n                        <Button variant=\"primary\">\n                            Go To Appointment Book\n                        </Button>\n                    </Link>\n                </div>\n                { dateWidget }\n                <AppointmentTable start={this.state.start} end={this.state.end}/>\n            </div>\n        );\n    }\n}\n\nexport default Appointments","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from 'react-router-dom';\n\nclass CustomerCard extends Component<customer, customer> {\n    constructor(props: customer) {\n        super(props);\n        this.state = {\n            id: props.id,\n            first_name: props.first_name,\n            last_name: props.last_name,\n            phone: props.phone,\n            email: props.email,\n            notes: props.notes,\n        };\n    }\n\n    render() {\n        let { id, first_name, last_name, phone, email } = this.state;\n        let customer_page = `customer/${ id }`;\n        return (\n            <Card style={{ minWidth: '15rem',\n                    maxWidth: '15rem',\n                    margin: '.5rem'}}>\n                <Card.Body>\n                    <Card.Title style={{ margin: '0rem' }}>\n                        { first_name } { last_name }\n                    </Card.Title>\n                    <Card.Body style={{ padding: '1rem 0rem' }}>\n                        Customer #{ id }\n                        <br></br>\n                        { phone }\n                        <br></br>\n                        { email }\n                    </Card.Body>\n                </Card.Body>\n                <Card.Footer>\n                    <Link to={ customer_page } >\n                        <Button variant=\"primary\">View Profile</Button>\n                    </Link>\n                </Card.Footer>\n            </Card>\n        );\n    }\n}\n\nexport default CustomerCard;","import React, { Component } from 'react';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport CustomerCard from './CustomerCard';\nimport { getAllCustomers } from '../Api/Api';\n\ntype propType = {};\ntype stateType = { cardList: Array<customer>; };\n\nclass CustomerCardList extends Component<propType, stateType> {\n    constructor(props: propType) {\n        super(props);\n        this.state = {\n            cardList: []\n        };\n    }\n\n    compareByName(a: customer, b: customer) {\n        if(a.last_name < b.last_name){\n            return -1;\n        } else if (a.last_name > b.last_name){\n            return 1;\n        } else { return 0; }\n    }\n\n    componentDidMount() {\n        this.refreshList();\n    }\n\n    refreshList = () => {\n        getAllCustomers()\n            .then(res => {\n                this.setState({ cardList: res });\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        const cards = this.state.cardList.sort(this.compareByName).map((card: customer) => \n            <CustomerCard\n                key={card.id}\n                id={card.id}\n                first_name={card.first_name}\n                last_name={card.last_name}\n                phone={card.phone}\n                email={card.email}\n                notes={card.notes}\n            />\n        );\n\n        return (\n            <CardDeck style={{ flexWrap: \"wrap\", margin:'0rem -.5rem'}}>\n                { cards }\n            </CardDeck>\n        );\n    }\n}\n\nexport default CustomerCardList;","import React, { Component } from 'react';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\ninterface props { text: string; form: JSX.Element }\n\nclass AddAccordion extends Component<props, any>{\n    constructor(props: props){\n        super(props);\n        this.state = {};\n    }\n\n    header = () => {\n        return (\n            <Card.Header style={{ backgroundColor:'white', borderColor:'white', padding:'.5rem 0rem' }}>\n                <Accordion.Toggle as={ Button } variant=\"primary\" eventKey=\"0\">\n                    {this.props.text}\n                </Accordion.Toggle>\n            </Card.Header>\n        );\n    }\n\n    collapse = () => {\n        return (\n            <Accordion.Collapse eventKey=\"0\" style={{ padding:'.5rem 0rem' }}>\n                <Card.Body style={{ padding:'1rem 1.25rem', border:'1px solid', borderColor:'#ced4da' }}>\n                    { this.props.form }\n                </Card.Body>\n            </Accordion.Collapse>\n        );\n    }\n\n    render() {\n        return (\n            <Accordion style={{ maxWidth: '30rem' }}>\n                <Card style={{ borderColor:'white', padding:'0rem' }}>\n                    { this.header() }\n                    { this.collapse() }\n                </Card>\n            </Accordion>\n        );\n    }\n}\n\nexport default AddAccordion","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { addCustomer, updateCustomer, getCookie } from '../Api/Api';\n\ninterface propsType {\n    request: string;\n    customer: Readonly<customer>;\n}\n\ninterface stateType extends customer { request: string }\n\nconst REQ_FIELDS_MSG = \"Make sure that all required fields are filled.\";\nconst ADD_MSG = \"Error: Could not add customer to database. \" + REQ_FIELDS_MSG;\nconst UPDATE_MSG = \"Error: Could not update customer info. \" + REQ_FIELDS_MSG;\n\nclass CustomerForm extends Component<propsType, any> {\n    csrftoken: string;\n    constructor(props: propsType){\n        super(props);\n        this.state = {\n            request: props.request,\n            id: props.customer.id,\n            first_name: props.customer.first_name,\n            last_name: props.customer.last_name,\n            phone: props.customer.phone,\n            email: props.customer.email,\n            notes: props.customer.notes,\n        }\n        this.csrftoken = getCookie(document, 'csrftoken');\n    }\n\n    getData = () => {\n        return ({\n            id: this.state.id,\n            first_name: this.state.first_name,\n            last_name: this.state.last_name,\n            phone: this.state.phone,\n            email: this.state.email,\n            notes: this.state.notes,\n        })\n    }\n\n    addCustomer = () => {\n        addCustomer(this.getData(), this.csrftoken)\n            .then(res => {\n                console.log(res);\n                window.location.reload();\n            })\n            .catch(err => {\n                console.log(err)\n                alert(ADD_MSG);\n            });\n    }\n\n    updateCustomer() {\n        updateCustomer(this.getData(), this.csrftoken)\n            .then(res => {\n                console.log(res);\n                window.location.reload();\n            })\n            .catch(err => {\n                console.log(err)\n                alert(UPDATE_MSG)\n            });\n    }\n\n    onChange = (event: any) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleSubmit = (event: React.FormEvent<HTMLElement>) => {\n        event.preventDefault();\n        if(this.state.request === \"post\"){\n            this.addCustomer();\n        } else if(this.state.request === \"put\"){\n            this.updateCustomer();\n        }\n    }\n\n    render(){\n        const { first_name, last_name, phone, email, notes } = this.state;\n        return(\n            <Form onSubmit={ this.handleSubmit } id=\"customerForm\">\n                <Form.Label>First Name (required)</Form.Label>\n                <Form.Control\n                    placeholder=\"Enter first name\" name=\"first_name\"\n                    value={first_name} onChange={this.onChange}/>\n                <Form.Label>Last Name (required)</Form.Label>\n                <Form.Control placeholder=\"Enter last name\"\n                    name=\"last_name\" value={last_name}\n                    onChange={this.onChange}/>\n                <Form.Label>Phone</Form.Label>\n                <Form.Control placeholder=\"Enter phone number\"\n                    name=\"phone\" value={phone} onChange={this.onChange}/>\n                <Form.Label>Email</Form.Label>\n                <Form.Control type=\"email\" placeholder=\"Enter email\"\n                    name=\"email\" value={email} onChange={this.onChange}/>\n                <Form.Label>Notes</Form.Label>\n                <Form.Control as=\"textarea\" placeholder=\"Enter notes\"\n                    name=\"notes\" value={notes} onChange={this.onChange}/>\n                <br></br>\n                <Button variant=\"success\" type=\"submit\"> Save </Button>\n            </Form>\n        );\n    }\n}\n\nexport default CustomerForm","import React, { Component } from \"react\";\nimport CustomerForm from './CustomerForm';\n\nclass NewCustomerForm extends Component<any, customer> {\n    constructor(props: any){\n        super(props);\n        this.state = {\n            id: 0,\n            first_name: \"\",\n            last_name: \"\",\n            phone: \"\",\n            email: \"\",\n            notes: \"\",\n        }\n    }\n\n    render() {\n        let customer = this.state;\n        return(\n            <CustomerForm\n                request=\"post\"\n                customer={customer}\n            />\n        );\n    }\n}\n\nexport default NewCustomerForm","import React, { Component } from 'react';\nimport CustomerCardList from '../Customer/CustomerCardList'\nimport AddAccordion from '../Shared/AddAccordion';\nimport NewCustomerForm from '../Customer/NewCustomerForm';\n\nclass Customers extends Component {\n    constructor(props: any) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Customers</h1>\n                <AddAccordion text='Add Customer' form={<NewCustomerForm />} />\n                <CustomerCardList />\n            </div>\n        );\n    }\n}\n\nexport default Customers","import React, { Component} from 'react'\n\nclass Home extends Component {\n    constructor(props: any) {\n        super(props);\n        this.state = {};\n    }\n  \n    render() {\n        return (\n            <div>\n                <h1>Home</h1>\n                <p>Home page body content</p>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport { Link } from 'react-router-dom';\n\ntype cardType = {\n    id: number;\n    name: string;\n    brand: {\n        id: number;\n        name: string;\n    };\n    price: number;\n}\n\nclass ProductCard extends Component<cardType, cardType> {\n    constructor(props: cardType) {\n        super(props);\n        this.state = {\n            id: props.id,\n            name: props.name,\n            brand: props.brand,\n            price: props.price,\n        };\n    }\n\n    render() {\n        let url = `/product/${this.state.id}`;\n        return(\n            <Card style={{minWidth: '15rem',\n                    maxWidth: '15rem',\n                    margin: '.5rem'}}>\n                <Card.Body>\n                    <Card.Title>{ this.state.brand.name } { this.state.name } </Card.Title>\n                    <Card.Text> ${ this.state.price } </Card.Text>\n                </Card.Body>\n                <Card.Footer>\n                    <Link to={url}>\n                        <Button variant=\"primary\"> Details </Button>\n                    </Link>\n                </Card.Footer>\n            </Card>\n        );\n    }\n}\n\nexport default ProductCard","import React, { Component } from 'react';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport ProductCard from './ProductCard';\nimport { getAllProducts } from '../Api/Api';\n\ntype cardType = {\n    id: number;\n    name: string;\n    brand: {\n        id: number;\n        name: string;\n    };\n    price: number;\n};\n\ntype propType = {};\ntype stateType = { cardList: Array<cardType>; };\n\nclass ProductCardList extends Component<propType, stateType> {\n    constructor(props: propType) {\n        super(props);\n        this.state = {\n            cardList: []\n        };\n    }\n\n    componentDidMount(){\n        this.refreshList();\n    }\n\n    refreshList = () => {\n        getAllProducts()\n            .then(res => this.setState({ cardList: res}))\n            .catch(err => console.log(err));\n    }\n\n    compareCards = (a: cardType, b: cardType) => {\n        if(a.brand.name.localeCompare(b.brand.name) < 0) { return -1; }\n        else if(a.brand.name.localeCompare(b.brand.name) > 0) { return 1; }\n        else {\n            if(a.name.localeCompare(b.name) < 0) { return -1; }\n            else if(a.name.localeCompare(b.name) > 0) { return 1; }\n            else { return 0; }\n        }\n    }\n\n    render() {\n        return(\n            <CardDeck style={{ flexWrap: \"wrap\", margin:'0rem -.5rem'}}>\n                {\n                    this.state.cardList\n                        .sort(this.compareCards)\n                        .map((card: cardType) =>\n                        <ProductCard \n                            key={card.id}\n                            id={card.id}\n                            name={card.name}\n                            brand={card.brand}\n                            price={card.price}\n                        />\n                    )\n                }\n            </CardDeck>\n        );\n    }\n}\n\nexport default ProductCardList","import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { addProduct, getAllBrands, updateProduct, getCookie } from '../Api/Api';\n\ninterface props {\n    request: string;\n    product: product;\n}\nconst UNIQUE_MSG = \"Make sure fields are not blank and name is unique for given brand.\";\nconst ADD_ERR_MSG = \"Error: Product could not be added to the database. \" + UNIQUE_MSG;\nconst UDT_ERR_MSG = \"Error: Product info could not be updated in the database. \" + UNIQUE_MSG; \n\nclass ProductForm extends Component<props, any> {\n    csrftoken: string;\n    constructor(props: props){\n        super(props);\n        this.state = {\n            request: props.request,\n            id: props.product.id,\n            name: props.product.name,\n            brand: props.product.brand,\n            price: props.product.price,\n            brands: [],\n        }\n        this.csrftoken = getCookie(document, 'csrftoken');\n    }\n\n    componentDidMount() {\n        this.getBrands();\n    }\n\n    product = () : product => {\n        return ({\n            id: this.state.id,\n            name: this.state.name,\n            brand: this.state.brand,\n            price: this.state.price,\n        });\n    }\n\n    addProduct = () => {\n        addProduct(this.product(), this.csrftoken)\n            .then(() => {\n                window.location.reload();\n            })\n            .catch(err =>  {\n                console.log(err);\n                alert(ADD_ERR_MSG);\n            });\n    }\n\n    updateProduct = () => {\n        updateProduct(this.product(), this.csrftoken)\n            .then(() => {\n                window.location.reload();\n            })\n            .catch(err => {\n                console.log(err)\n                alert(UDT_ERR_MSG)\n            });\n    }\n\n    getBrands = () => {\n        getAllBrands()\n            .then(res => {\n                this.setState({brands: res});\n                this.setState({brand: res[0].id});\n            })\n            .catch(err => console.log(err));\n    }\n\n    handleSubmit = (event: React.FormEvent<HTMLElement>) => {\n        event.preventDefault();\n        if(this.state.request === \"post\"){\n            this.addProduct();\n        } else if(this.state.request === \"put\"){\n            this.updateProduct();\n        }\n    }\n\n    objNameSort = (a: any, b: any) => {\n        let an = a.name.toUpperCase();\n        let bn = b.name.toUpperCase();\n        if(an < bn) { return -1; }\n        else if(an > bn) { return 1; }\n        else { return 0; }\n    }\n\n    onChange = (event: any) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    brandRow = () => {\n        let arr = this.state.brands\n        return (\n            <Form.Row>\n                <Form.Group as=\"select\" onChange={(item:any) => {\n                    let brand = item.target.value;\n                    this.setState({ brand: brand });\n                }}>\n                    { arr.sort(this.objNameSort).map((b:any) =>\n                        <option value={b.id} key={b.id}>{b.name}</option>\n                    )}\n                </Form.Group>\n            </Form.Row>\n        );\n    }\n\n    render() {\n        const { name, price } = this.state;\n        return(\n            <Form onSubmit={ this.handleSubmit } id=\"productForm\">\n                <Form.Label>Brand</Form.Label>\n                { this.brandRow() }\n                <Form.Label>Name</Form.Label>\n                <Form.Control placeholder=\"Enter product name\" name=\"name\" value={name} onChange={this.onChange} />\n                <Form.Label>Price</Form.Label>\n                <Form.Control placeholder=\"Enter price\" name=\"price\" value={price} onChange={this.onChange} />\n                <br></br>\n                <Button variant=\"success\" type=\"submit\"> Add </Button>\n            </Form>\n        );\n    }\n}\n\nexport default ProductForm\n","import React, { Component } from \"react\";\nimport ProductForm from './ProductForm';\n\nclass NewProductForm extends Component<any, product> {\n    constructor(props: any){\n        super(props);\n        this.state = {\n            id: 0,\n            name: \"\",\n            price: \"\",\n            brand: 0,\n        }\n    }\n\n    render() {\n        let product = this.state;\n        return(\n            <ProductForm\n                request=\"post\"\n                product={product}\n            />\n        );\n    }\n}\n\nexport default NewProductForm","import React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card'\n\ntype cardType = {\n    id: number;\n    name: string;\n}\n\nclass BrandCard extends Component<cardType, cardType> {\n    constructor(props: cardType) {\n        super(props);\n        this.state = {\n            id: props.id,\n            name: props.name,\n        };\n    }\n\n    render() {\n        return(\n            <Card style={{minWidth: '10rem',\n                    maxWidth: '10rem',\n                    margin: '.5rem'}}>\n                <Card.Body>\n                    <Card.Title>{ this.state.name } </Card.Title>\n                </Card.Body>\n            </Card>\n        );\n    }\n}\n\nexport default BrandCard","import React, { Component } from 'react';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport BrandCard from './BrandCard';\nimport { getAllBrands } from '../Api/Api';\n\ntype cardType = {\n    id: number;\n    name: string;\n};\n\ntype propType = {};\ntype stateType = { cardList: Array<cardType>; };\n\nclass BrandCardList extends Component<propType, stateType> {\n    constructor(props: propType) {\n        super(props);\n        this.state = {\n            cardList: []\n        };\n    }\n\n    componentDidMount(){\n        this.refreshList();\n    }\n\n    refreshList = () => {\n        getAllBrands()\n            .then(res => this.setState({ cardList: res}))\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        return(\n            <CardDeck style={{ flexWrap: \"wrap\", margin:'0rem -.5rem'}}>\n                {\n                    this.state.cardList.map((card: cardType) =>\n                        <BrandCard \n                            key={card.id}\n                            id={card.id}\n                            name={card.name}\n                        />\n                    )\n                }\n            </CardDeck>\n        );\n    }\n}\n\nexport default BrandCardList","import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { addBrand, getCookie } from '../Api/Api';\n\nconst ERR_MSG = \"Error: could not add brand to the database. Make sure field is not blank or a duplicate entry.\"\n\nclass NewBrandForm extends Component<any, any> {\n    csrftoken: string;\n    constructor(props: any){\n        super(props);\n        this.state = {\n            name: \"\",\n        };\n        this.csrftoken = getCookie(document, 'csrftoken');\n    }\n\n    addBrand() {\n        let brand = { name: this.state.name }\n        addBrand(brand, this.csrftoken)\n            .then(() => {\n                window.location.reload();\n            })\n            .catch(err =>  {\n                console.log(err)\n                alert(ERR_MSG);\n            });\n    }\n\n    handleSubmit = (event: any) => {\n        event.preventDefault();\n        this.addBrand();\n    }\n\n    onChange = (event: any) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    render() {\n        const { name } = this.state;\n        return(\n            <Form onSubmit={ this.handleSubmit } id=\"newBrandForm\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control placeholder=\"Enter brand name\" name=\"name\" value={name} onChange={this.onChange} />\n                <br></br>\n                <Button variant=\"success\" type=\"submit\"> Add </Button>\n            </Form>\n        );\n    }\n}\n\nexport default NewBrandForm\n","import React, { Component } from 'react'\nimport ProductCardList from '../Product/ProductCardList';\nimport AddAccordion from '../Shared/AddAccordion';\nimport NewProductFrom from '../Product/NewProductForm';\nimport BrandCardList from '../Product/BrandCardList';\nimport NewBrandForm from '../Product/NewBrandForm';\n\nclass Products extends Component {\n    constructor(props: any) {\n        super(props);\n        this.state = {};\n    }\n  \n    render() {\n        return (\n            <div>\n                <h1>Brands</h1>\n                <AddAccordion text='Add Brand' form={<NewBrandForm />} />\n                <BrandCardList />\n                <h1>Products</h1>\n                <AddAccordion text='Add Product' form={<NewProductFrom />} />\n                <ProductCardList />\n            </div>\n        );\n    }\n}\n\nexport default Products;","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport { Link } from 'react-router-dom';\nimport { deleteServmod, getCookie, getServModByBoth } from '../Api/Api';\n\ntype cardType = {\n    id: number;\n    s_id?: number;\n    servmod?: boolean;\n    modifier?: boolean;\n    category?: boolean;\n    name: string;\n    price?: number;\n    categoryName?: string;\n}\n\nclass ServiceCard extends Component<cardType, cardType> {\n    csrftoken: string;\n    constructor(props: cardType) {\n        super(props);\n        this.state = {\n            id: props.id,\n            s_id: props.s_id,\n            servmod: props.servmod,\n            modifier: props.modifier,\n            category: props.category,\n            name: props.name,\n            price: props.price,\n            categoryName: props.categoryName\n        };\n        this.csrftoken = getCookie(document, 'csrftoken');\n    }\n\n    disconnectModifier = () => {\n        let servmodID = -1;\n        if(this.state.s_id === undefined || this.state.id === undefined) return;\n\n        getServModByBoth(this.state.s_id, this.state.id)\n            .then( res => {\n                servmodID = res[0].id;\n                deleteServmod(servmodID, this.csrftoken)\n                    .then( () => window.location.reload() )\n                    .catch( err =>  console.log(err) );\n            })\n            .catch( err => console.log(err) );\n        console.log(servmodID);\n    }\n\n    handleClick = (event: any) => {\n        event.preventDefault();\n        this.disconnectModifier();\n    }\n\n    button = ( service_page: string) => {\n        if(this.state.servmod){\n            return <Button variant=\"danger\" onClick={this.handleClick}>Remove</Button>\n        } else {\n            return (\n                <Link to={service_page}>\n                    <Button variant=\"primary\"> Details </Button>\n                </Link>\n            );\n        }\n    }\n\n    render() {\n        let cardStyle = this.state.category ? {minWidth: '10rem',\n            maxWidth: '10rem',\n            margin: '.5rem'\n        } : {minWidth: '15rem', maxWidth: '15rem', margin: '.5rem'} ;\n        let service_page = this.state.modifier ? `/modifier/` : `/service/`;\n        service_page = this.state.category ? '/category/' : service_page;\n        service_page += `${ this.state.id }`;\n        let body = !this.state.category ? (\n            <Card.Body>\n                <Card.Title> { this.state.name } </Card.Title>\n                <Card.Text> { this.state.categoryName }</Card.Text>\n                <Card.Text> ${ this.state.price } </Card.Text>\n            </Card.Body>\n        ) : (\n            <Card.Body>\n                <Card.Title> { this.state.name } </Card.Title>\n            </Card.Body>\n        );\n        let footer = !this.state.category ? (\n            <Card.Footer>\n                { this.button(service_page) }\n            </Card.Footer>\n        ) : (\n            null\n        );\n\n        return(\n            <Card style={cardStyle}>\n                {body}\n                {footer}\n            </Card>\n        );\n    }\n}\n\nexport default ServiceCard","import React, { Component } from 'react';\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport ServiceCard from './ServiceCard'\nimport { getAllServices } from '../Api/Api';\n\ntype cardType = {\n    id: number;\n    name: string;\n    price: number;\n    category: {\n        id: number;\n        name: string;\n    }\n};\n\ntype propType = {};\ntype stateType = { cardList: Array<cardType>; };\n\nclass ServiceCardList extends Component<propType, stateType> {\n    constructor(props: propType) {\n        super(props);\n        this.state = {\n            cardList: []\n        };\n    }\n\n    componentDidMount(){\n        this.refreshList();\n    }\n\n    refreshList = () => {\n        getAllServices()\n            .then(res => this.setState({ cardList: res}))\n            .catch(err => console.log(err));\n    }\n\n    compareCards = (a: cardType, b: cardType) => {\n        if(a.category.name.localeCompare(b.category.name) < 0) { return -1; }\n        else if(a.category.name.localeCompare(b.category.name) > 0) { return 1; }\n        else {\n            if(a.name.localeCompare(b.name) < 0) { return -1; }\n            else if(a.name.localeCompare(b.name) > 0) { return 1; }\n            else { return 0; }\n        }\n    }\n\n    render() {\n        return(\n            <CardDeck style={{ flexWrap: \"wrap\", margin:'0rem -.5rem'}}>\n                {\n                    this.state.cardList\n                        .sort(this.compareCards)\n                        .map((card: cardType) =>\n                        <ServiceCard \n                            key={card.id}\n                            id={card.id}\n                            name={card.name}\n                            price={card.price}\n                            categoryName={card.category.name}\n                        />\n                    )\n                }\n            </CardDeck>\n        );\n    }\n}\n\nexport default ServiceCardList","import React, { Component } from 'react';\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport ServiceCard from './ServiceCard'\nimport { getAllModifiers } from '../Api/Api';\n\ntype cardType = {\n    id: number;\n    name: string;\n    price: number;\n};\n\ntype propType = {};\ntype stateType = { cardList: Array<cardType>; };\n\nclass ModifierCardList extends Component<propType, stateType> {\n    constructor(props: propType) {\n        super(props);\n        this.state = {\n            cardList: []\n        };\n    }\n\n    componentDidMount(){\n        this.refreshList();\n    }\n\n    refreshList = () => {\n        getAllModifiers()\n            .then(res => this.setState({ cardList: res}))\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        return(\n            <CardDeck style={{ flexWrap: \"wrap\", margin:'0rem -.5rem'}}>\n                {\n                    this.state.cardList.map((card: cardType) =>\n                        <ServiceCard \n                            key={card.id}\n                            id={card.id}\n                            name={card.name}\n                            price={card.price}\n                            modifier={true}\n                        />\n                    )\n                }\n            </CardDeck>\n        );\n    }\n}\n\nexport default ModifierCardList","import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { addService, updateService, getAllCategories, getCookie } from '../Api/Api';\n\ninterface propsType {\n    request: string;\n    service: Readonly<service>;\n}\n\nconst UNIQUE_MSG = \"Make sure fields are not blank and name is unique for given brand.\";\nconst ADD_ERR_MSG = \"Error: Service could not be added to the database. \" + UNIQUE_MSG;\nconst UDT_ERR_MSG = \"Error: Service info could not be updated in the database. \" + UNIQUE_MSG; \n\nclass ServiceForm extends Component<propsType, any> {\n    csrftoken: string;\n    constructor(props: propsType){\n        super(props);\n        this.state = {\n            request: props.request,\n            id: props.service.id,\n            name: props.service.name,\n            price: props.service.price,\n            category: props.service.category,\n            categories: [],\n        }\n        this.csrftoken = getCookie(document, 'csrftoken');\n    }\n\n    componentDidMount() {\n        this.getCategories();\n    }\n\n    service = () => {\n        return ({\n            id: this.state.id,\n            name: this.state.name,\n            price: this.state.price,\n            category: this.state.category,\n        });\n    }\n\n    addService = () => {\n        addService(this.service(), this.csrftoken)\n            .then(() => {\n                window.location.reload();\n            })\n            .catch(err => {\n                console.log(err);\n                alert(ADD_ERR_MSG);\n            });\n    }\n\n    updateService = () => {\n        updateService(this.service(), this.csrftoken)\n            .then(() => {\n                window.location.reload();\n            })\n            .catch(err => {\n                console.log(err);\n                alert(UDT_ERR_MSG);\n            });\n    }\n\n    getCategories = () => {\n        getAllCategories()\n            .then(res => {\n                this.setState({\n                    categories: res,\n                    category: res[0].id\n                })\n            })\n            .catch(err => console.log(err));\n    }\n\n    handleSubmit = (event: React.FormEvent<HTMLElement>) => {\n        event.preventDefault();\n        if(this.state.request === \"post\"){\n            this.addService();\n        } else if(this.state.request === \"put\"){\n            this.updateService();\n        }\n    }\n\n    onChangeCategory = (item: any) => {\n        let category = item.target.value;\n        this.setState({ category: category });\n    }\n\n    objNameSort = (a: any, b: any) => {\n        let an = a.name.toUpperCase();\n        let bn = b.name.toUpperCase();\n        if(an < bn) { return -1; }\n        else if(an > bn) { return 1; }\n        else { return 0; }\n    }\n\n    categoryRow = () => {\n        let categories = this.state.categories\n        return (\n            <Form.Row>\n                <Form.Group as=\"select\" onChange={ this.onChangeCategory }>\n                    { categories.sort(this.objNameSort).map((c:any) =>\n                        <option value={ c.id } key={ c.id }>{ c.name }</option>\n                    )}\n                </Form.Group>\n            </Form.Row>\n        );\n    }\n\n    onChange = (event: any) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    render() {\n        const { name, price } = this.service();\n        return(\n            <Form onSubmit={ this.handleSubmit } id=\"ServiceForm\">\n                <Form.Label>Category</Form.Label>\n                {this.categoryRow()}\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                    placeholder=\"Enter service name\"\n                    name=\"name\" value={ name }\n                    onChange={ this.onChange }\n                />\n                <Form.Label>Price</Form.Label>\n                <Form.Control placeholder=\"Enter price\" name=\"price\" value={ price } onChange={ this.onChange } />\n                <br></br>\n                <Button variant=\"success\" type=\"submit\"> Save </Button>\n            </Form>\n        );\n    }\n}\n\nexport default ServiceForm\n","import React, { Component } from \"react\";\nimport ServiceForm from './ServiceForm';\n\nconst EMPTY_SERVICE = {\n    id: 0,\n    name: \"\",\n    price: \"\",\n    category: 0,\n}\n\nclass NewServiceForm extends Component<any, service> {\n    render() {\n        return(\n            <ServiceForm\n                request=\"post\"\n                service={EMPTY_SERVICE}\n            />\n        );\n    }\n}\n\nexport default NewServiceForm","import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { addModifier, updateModifier, getCookie } from \"../Api/Api\";\n\ninterface props {\n    request: string;\n    modifier: Readonly<modifier>;\n}\n\nconst UNIQUE_MSG = \"Make sure fields are not blank and name is unique.\"\nconst ADD_ERR_MSG = \"Error: Modifier could not be added to the database. \" + UNIQUE_MSG;\nconst UDT_ERR_MSG = \"Error: Modifier info could not be updated in the database. \" + UNIQUE_MSG;\n\nclass ModifierForm extends Component<props, any> {\n    csrftoken: any;\n    constructor(props: props){\n        super(props);\n        this.state = {\n            request: props.request,\n            id: props.modifier.id,\n            name: props.modifier.name,\n            price: props.modifier.price,\n        }\n        this.csrftoken = getCookie(document, 'csrftoken');\n    }\n    \n    modifier = () => {\n        return ({\n            id: this.state.id,\n            name: this.state.name,\n            price: this.state.price,\n        })\n    }\n\n    addModifier = () => {\n        const data = {\n            name: this.state.name,\n            price: this.state.price,\n        };\n        \n        addModifier(data, this.csrftoken)\n            .then(() => {\n                window.location.reload();\n            })\n            .catch(err => {\n                console.log(err);\n                alert(ADD_ERR_MSG);\n            });\n    }\n\n    updateModifier = () => {\n        updateModifier(this.modifier(), this.csrftoken)\n            .then(() => {\n                window.location.reload();\n            })\n            .catch(err => {\n                console.log(err);\n                alert(UDT_ERR_MSG);\n            })\n    }\n\n    handleSubmit = (event: any) => {\n        event.preventDefault();\n        if(this.state.request === \"put\"){\n            this.updateModifier();\n        } else if(this.state.request === \"post\"){\n            this.addModifier();\n        }\n    }\n\n    onChange = (event: any) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    render() {\n        const { name, price } = this.state;\n        return(\n            <Form onSubmit={ this.handleSubmit } id=\"newModifierForm\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control placeholder=\"Enter modifier name\" name=\"name\" value={name} onChange={this.onChange} />\n                <Form.Label>Price</Form.Label>\n                <Form.Control placeholder=\"Enter price\" name=\"price\" value={price} onChange={this.onChange} />\n                <br></br>\n                <Button variant=\"success\" type=\"submit\"> Save </Button>\n            </Form>\n        );\n    }\n}\n\nexport default ModifierForm","import React, { Component } from \"react\";\nimport ModifierForm from \"./ModifierForm\";\n\nconst EMPTY_MODIFIER = {\n    id: 0,\n    name: \"\",\n    price: \"\",\n}\n\nclass NewModifierForm extends Component<any, any> {\n    render() {\n        return(\n            <ModifierForm\n                request=\"post\"\n                modifier={EMPTY_MODIFIER}\n            />           \n        );\n    }\n}\n\nexport default NewModifierForm","import React, { Component } from 'react';\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport ServiceCard from './ServiceCard';\nimport { getAllCategories } from '../Api/Api';\n\ntype cardType = {\n    id: number;\n    name: string;\n};\n\ntype propType = {};\ntype stateType = { cardList: Array<cardType>; };\n\nclass CategoryCardList extends Component<propType, stateType> {\n    constructor(props: propType) {\n        super(props);\n        this.state = {\n            cardList: []\n        };\n    }\n\n    componentDidMount(){\n        this.refreshList();\n    }\n\n    refreshList = () => {\n        getAllCategories()\n            .then(res => {\n                this.setState({ cardList: res });\n            })\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        return(\n            <CardDeck style={{ flexWrap: \"wrap\", margin:'0rem -.5rem'}}>\n                {\n                    this.state.cardList.map((card: cardType) =>\n                        <ServiceCard \n                            key={card.id}\n                            id={card.id}\n                            name={card.name}\n                            category={true}\n                        />\n                    )\n                }\n            </CardDeck>\n        );\n    }\n}\n\nexport default CategoryCardList","import React, { Component } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { addCategory, getCookie } from '../Api/Api';\n\nconst ERR_MSG = \"Error: Category could not be added to the database. Make sure field is not blank or a duplicated entry.\";\n\nclass NewCategoryForm extends Component<any, any> {\n    csrftoken: string;\n    constructor(props: any){\n        super(props);\n        this.state = {\n            name: \"\",\n        }\n        this.csrftoken = getCookie(document, 'csrftoken');\n    }\n\n    addCategory() {\n        let category = { name: this.state.name };\n        addCategory(category, this.csrftoken)\n            .then(() => {\n                window.location.reload();\n            })\n            .catch(err =>  {\n                console.log(err);\n                alert(ERR_MSG);\n            });\n    }\n\n    handleSubmit = (event: any) => {\n        event.preventDefault();\n        this.addCategory();\n    }\n\n    onChange = (event: any) => {\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    render() {\n        const { name } = this.state;\n        return(\n            <Form onSubmit={ this.handleSubmit } id=\"newCategoryForm\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control placeholder=\"Enter category name\" name=\"name\" value={name} onChange={this.onChange} />\n                <br></br>\n                <Button variant=\"success\" type=\"submit\"> Save </Button>\n            </Form>\n        );\n    }\n}\n\nexport default NewCategoryForm\n","import React, { Component } from 'react';\nimport ServiceCardList from '../Service/ServiceCardList';\nimport ModifierCardList from '../Service/ModifierCardList';\nimport AddAccordion from '../Shared/AddAccordion';\nimport NewServiceForm from '../Service/NewServiceForm';\nimport NewModifierForm from '../Service/NewModifierForm';\nimport CategoryCardList from '../Service/CategoryCardList';\nimport NewCategoryForm from '../Service/NewCategoryForm';\n\nclass Services extends Component {\n    constructor(props: any) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Categories</h1>\n                <AddAccordion text='Add Category' form={<NewCategoryForm />} />\n                <CategoryCardList />\n                <h1>Services</h1>\n                <AddAccordion text='Add Service' form={<NewServiceForm />} />\n                <ServiceCardList />\n                <div style={{margin:\"2rem 0rem\"}}></div>\n                <h1>Modifiers</h1>\n                <AddAccordion text='Add Modifier' form={<NewModifierForm />} />\n                <ModifierCardList />\n            </div>\n        );\n    }\n}\n\nexport default Services","import React, { Component } from 'react';\nimport Nav from 'react-bootstrap/Nav'\nimport { NavLink } from 'react-router-dom';\n\nconst linkStyle = {\n    fontSize: \"1.25rem\"\n}\n\nconst home = <div style={{margin: \"1rem\"}}><NavLink to=\"/\" style={linkStyle}>Home</NavLink></div>\nconst items = [\n    \"customers\",\n    \"products\",\n    \"services\",\n    \"appointments\",\n    // \"sales\",\n];\n\nclass Bar extends Component {\n    constructor(props: any) {\n        super(props);\n        this.state = {};\n    }\n\n    item(name: string){\n        const url = \"/\" + name;\n        const title = name.charAt(0).toUpperCase() + name.slice(1);\n        return(\n            <div style={{margin: \"1rem\"}} key={name}>\n                <NavLink to={url} style={linkStyle}>{title}</NavLink>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n                <Nav>\n                    {home}\n                    {items.map((element: string) => \n                        this.item(element)\n                    )}\n                </Nav>\n        );\n    }\n}\n\nexport default Bar;\n","import React, { Component } from \"react\";\nimport CustomerForm from './CustomerForm';\n\ntype propType = {\n    customer: customer;\n}\n\nclass UpdateCustomerForm extends Component<any, any> {\n    constructor(props: propType){\n        super(props);\n        this.state = {\n            id: props.customer.id,\n            first_name: props.customer.first_name,\n            last_name: props.customer.last_name,\n            phone: props.customer.phone,\n            email: props.customer.email,\n            notes: props.customer.notes,\n        }\n    }\n\n    render() {\n        const customer = this.state;\n        return(\n            <CustomerForm\n                request=\"put\"\n                customer={customer}\n            />\n        );\n    }\n}\n\nexport default UpdateCustomerForm","import React, { Component } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { getCustomer } from '../Api/Api';\nimport UpdateCustomerForm from './UpdateCustomerForm';\nimport AddAccordion from '../Shared/AddAccordion';\nimport AppointmentTable from '../Appointment/AppointmentTable';\n\ninterface Props extends RouteComponentProps { id: number; };\ninterface States { customer: customer; loaded: boolean; };\n\nclass Customer extends Component<Props, States> {\n    //TODO: replace any with more appropriate prop type\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            customer: {\n                id: props.match.params.id,\n                first_name: \"\",\n                last_name: \"\",\n                phone: \"\",\n                email: \"\",\n                notes: \"\",\n            },\n            loaded: false,\n        };\n    }\n\n    componentDidMount(){\n        this.refreshCustomerInfo();\n    }\n\n    refreshCustomerInfo = () => {\n        getCustomer(this.state.customer.id)\n            .then(res => {\n                this.setState({ customer: res, loaded: true });\n            })\n            .catch(err => console.log(err)); //TODO: handle case when customer doesn't exist\n    }\n\n    render() {\n        if(this.state.loaded){\n            let c = this.state.customer;\n            let f = <UpdateCustomerForm customer={this.state.customer}/>;\n            let a = <AddAccordion text='Edit Info' form={f} />\n            return (\n                <div>\n                    <div>\n                        <h1>{ c.first_name} {c.last_name} </h1>\n                        {a}\n                        Customer #{ c.id } <br></br>\n                        { c.phone } <br></br>\n                        { c.email } <br></br>\n                        { c.notes } <br></br>\n                    </div>\n\n                    <h3>Appointments</h3>\n                    <AppointmentTable id={c.id}/>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default Customer;\n","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { Route } from 'react-router-dom';\n\ntype tableEntryType = {\n    id?: number;\n    appointment?: number;\n    product?: number;\n    brand?: string;\n    name?: string;\n    quantity: number;\n    unitSalePrice?: string;\n    subtotal: string;\n    unitTax?: string;\n    tax: string;\n    total: string;\n    date?: string;\n}\n\nclass PSalesTableEntry extends Component<tableEntryType, tableEntryType>{\n    constructor(props: tableEntryType){\n        super(props);\n        this.state = {\n            id: props.id,\n            appointment: props.appointment,\n            product: props.product,\n            name: props.name,\n            brand: props.brand,\n            quantity: props.quantity,\n            unitSalePrice: props.unitSalePrice,\n            subtotal: props.subtotal,\n            unitTax: props.unitTax,\n            tax: props.tax,\n            total: props.total,\n            date: props.date,\n        };\n    }\n\n    render() {\n        const row = () => ( <Route render={({ history }) => (\n            <tr style={{textAlign:\"right\"}} key={ this.state.id } onClick={ () => { history.push(`/psale/${this.state.id}`)} }>\n                <td>{ moment(this.state.date).format('ll') }</td>\n                <td>{ this.state.id }</td>\n                <td>{ this.state.appointment }</td>\n                <td>{ this.state.product }</td>\n                <td>{ this.state.brand }</td>\n                <td>{ this.state.name }</td>\n                <td>{ this.state.quantity }</td>\n                <td>{ this.state.unitSalePrice }</td>\n                <td>{ this.state.unitTax }</td>\n                <td>{ this.state.subtotal }</td>\n                <td>{ this.state.tax }</td>\n                <td>{ this.state.total }</td>\n            </tr>\n        )} /> );\n\n        return row();\n    }\n}\n\nexport default PSalesTableEntry","import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table'\nimport PSalesTableEntry from './PSalesTableEntry'\nimport { getAllPSalesDetailed, getPSalesByAppointment } from '../../Api/Api';\n\ntype tableEntryType = {\n    id: number;\n    appointment: any;\n    product: any;\n    name: string;\n    quantity: number;\n    unitSalePrice: string;\n    unitTax: string;\n    payment: string;\n    subtotal: string;\n    tax: string;\n    total: string;\n};\n\ntype propType = { id?: number}\ntype stateType = { id?: number, details: Array<tableEntryType>};\n\nclass PSalesTable extends Component<propType, stateType>{\n    constructor(props: propType){\n        super(props);\n        this.state = {\n            id: props.id,\n            details: [],\n        };\n    }\n\n    componentDidMount(){\n        this.refreshList();\n    }\n\n    refreshList = () => {\n        if(this.state.id){\n            getPSalesByAppointment(this.state.id)\n                .then(res => {\n                     this.setState({ details: res });\n                })\n                .catch(err => console.log(err));\n        } else{\n            getAllPSalesDetailed()\n                .then(res => this.setState({ details: res }))\n                .catch(err => console.log(err));\n        }\n    }\n\n    render() {\n        let rows = this.state.details\n            .reverse()\n            .map((entry: tableEntryType) =>\n                <PSalesTableEntry\n                    key={entry.id}\n                    id={entry.id}\n                    appointment={entry.appointment.id}\n                    product={entry.product.id}\n                    brand={entry.product.brand.name}\n                    name={entry.name}\n                    quantity={entry.quantity}\n                    unitSalePrice={entry.unitSalePrice}\n                    subtotal={entry.subtotal}\n                    unitTax={entry.unitTax}\n                    tax={entry.tax}\n                    total={entry.total}\n                    date={entry.appointment.startDate}\n                />\n            );\n        return (\n            <Table striped bordered hover size=\"sm\">\n                <thead>\n                    <tr style={{textAlign:\"center\"}}>\n                        <th>Date</th>\n                        <th>PSID</th>\n                        <th>AID</th>\n                        <th>PID</th>\n                        <th>Brand</th>\n                        <th>Name</th>\n                        <th>Qty</th>\n                        <th>Unit Price</th>\n                        <th>Unit Tax</th>\n                        <th>Subtotal</th>\n                        <th>Tax</th>\n                        <th>Total</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    { rows }\n                </tbody>\n            </Table>\n        );\n    }\n}\n\nexport default PSalesTable","import React, { Component } from 'react';\nimport PSalesTable from './Tables/PSalesTable'\n\nclass PSales extends Component {\n    constructor(props: any) {\n        super(props);\n        this.state = {};\n    }\n  \n    render() {\n        return (\n            <PSalesTable />\n        );\n    }\n}\n\nexport default PSales;","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { Route } from 'react-router-dom';\n\ntype tableEntryType = {\n    id: number;\n    appointment: number;\n    service: number;\n    name: string;\n    salePrice: string;\n    date: string\n}\n\nclass SsalesTableEntry extends Component<tableEntryType, tableEntryType>{\n    constructor(props: tableEntryType){\n        super(props);\n        this.state = {\n            id: props.id,\n            appointment: props.appointment,\n            service: props.service,\n            name: props.name,\n            salePrice: props.salePrice,\n            date: props.date,\n        };\n    }\n\n    render() {\n        const row = () => ( <Route render={({ history }) => (\n            <tr style={{textAlign:\"right\"}} key={ this.state.id } onClick={ () => { history.push(`/ssale/${this.state.id}`)} }>\n                <td>{ moment(this.state.date).format('ll') }</td>\n                <td>{ this.state.id }</td>\n                <td>{ this.state.appointment }</td>\n                <td>{ this.state.service }</td>\n                <td>{ this.state.name }</td>\n                <td>{ this.state.salePrice }</td>\n            </tr>\n        )} /> );\n\n        return row();\n    }\n}\n\nexport default SsalesTableEntry","import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport SSalesTableEntry from './SSalesTableEntry';\nimport { getAllSSalesDetailed, getSSalesByAppointment } from '../../Api/Api';\n\ntype tableEntryType = {\n    id: number;\n    appointment: any;\n    service: any;\n    name: string;\n    salePrice: string;\n    date: string;\n};\n\ntype propType = { id?: number}\ntype stateType = { id?: number; entries: Array<tableEntryType>; };\n\nclass SsalesTable extends Component<propType, stateType>{\n    constructor(props: propType){\n        super(props);\n        this.state = {\n            id: props.id,\n            entries: [],\n        };\n    }\n\n    componentDidMount(){\n        this.refreshList();\n    }\n\n    refreshList = () => {\n        if(this.state.id){\n            getSSalesByAppointment(this.state.id)\n                .then(res => {\n                     this.setState({ entries: res });\n                })\n                .catch(err => console.log(err));\n        } else{\n            getAllSSalesDetailed()\n                .then(res => this.setState({ entries: res }))\n                .catch(err => console.log(err));\n        }\n    }\n\n    render() {\n        return (\n            <Table striped bordered hover size=\"sm\">\n                <thead>\n                    <tr style={{textAlign:\"center\"}}>\n                        <th>Date</th>\n                        <th>SSID</th>\n                        <th>AID</th>\n                        <th>SID</th>\n                        <th>Name</th>\n                        <th>Price</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        this.state.entries\n                            .reverse()\n                            .map((entry: tableEntryType) =>\n                                <SSalesTableEntry\n                                    key={entry.id}\n                                    id={entry.id}\n                                    appointment={entry.appointment.id}\n                                    service={entry.service.id}\n                                    name={entry.name}\n                                    salePrice={entry.salePrice}\n                                    date={entry.appointment.startDate}\n                                />\n                            )\n                    }\n                </tbody>\n            </Table>\n        );\n    }\n}\n\nexport default SsalesTable","import React, { Component } from 'react';\nimport SSalesTable from './Tables/SSalesTable'\n\nclass SSales extends Component {\n    constructor(props: any) {\n        super(props);\n        this.state = {};\n    }\n  \n    render() {\n        return (\n            <SSalesTable />\n        );\n    }\n}\n\nexport default SSales;","import React, { Component } from 'react';\n\ntype tableEntryType = {\n    id: number;\n    service_sale: number;\n    modifier: number;\n}\n\nclass SMSalesTableEntry extends Component<tableEntryType, tableEntryType>{\n    constructor(props: tableEntryType){\n        super(props);\n        this.state = {\n            id: props.id,\n            service_sale: props.service_sale,\n            modifier: props.modifier,\n        };\n    }\n\n    render() {\n        return (\n            <tr key={ this.state.id } >\n                <td>{ this.state.id }</td>\n                <td>{ this.state.service_sale }</td>\n                <td>{ this.state.modifier }</td>\n            </tr>\n        );\n    }\n}\n\nexport default SMSalesTableEntry","import React, { Component } from 'react';\nimport Table from 'react-bootstrap/Table'\nimport SMSalesTableEntry from './SMSalesTableEntry'\nimport { getAllSMSales } from '../../Api/Api';\n\ntype tableEntryType = {\n    id: number;\n    service_sale: number;\n    modifier: number;\n};\n\ntype propType = { id?: number}\ntype stateType = { id?: number; entries: Array<tableEntryType>; };\n\nclass SMSalesTable extends Component<propType, stateType>{\n    constructor(props: propType){\n        super(props);\n        this.state = {\n            entries: [],\n        };\n    }\n\n    componentDidMount(){\n        this.refreshList();\n    }\n\n    refreshList = () => {\n        getAllSMSales()\n            .then(res => this.setState({ entries: res }))\n            .catch(err => console.log(err));\n    }\n\n    render() {\n        return (\n            <Table striped bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                        <th>SM Sale ID</th>\n                        <th>Service Sale ID</th>\n                        <th>Modifier ID</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        this.state.entries\n                            .filter(e => this.state.id ? e.id === this.state.id : true)\n                            .reverse()\n                            .map((entry: tableEntryType) =>\n                                <SMSalesTableEntry\n                                    key={entry.id}\n                                    id={entry.id}\n                                    service_sale={entry.service_sale}\n                                    modifier={entry.modifier}\n                                />\n                            )\n                    }\n                </tbody>\n            </Table>\n        );\n    }\n}\n\nexport default SMSalesTable","import React, { Component } from 'react';\nimport SMSalesTable from './Tables/SMSalesTable'\n\nclass SMSales extends Component {\n    constructor(props: any) {\n        super(props);\n        this.state = {};\n    }\n  \n    render() {\n        return (\n            <SMSalesTable />\n        );\n    }\n}\n\nexport default SMSales;","import React, { Component } from 'react';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport PSales from './PSales';\nimport SSales from './SSales';\nimport SMSales from './SMSales';\n\nclass SalesTabs extends Component {\n    constructor(props: any) {\n        super(props);\n        this.state = {};\n    }\n  \n    render() {\n        return (\n            <Tabs defaultActiveKey=\"psales\" id=\"sales-tabs\" transition={false}>\n                <Tab eventKey=\"psales\" title=\"Products\">\n                    <PSales />\n                </Tab>\n                <Tab eventKey=\"ssales\" title=\"Services\">\n                    <SSales />\n                </Tab>\n                <Tab eventKey=\"smsales\" title=\"Modifiers\">\n                    <SMSales />\n                </Tab>\n            </Tabs>\n        );\n    }\n}\n\nexport default SalesTabs;","import React, { Component } from 'react';\nimport SalesTabs from '../Sales/SalesTabs';\n\nclass Sales extends Component {\n    constructor(props: any) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Sales</h1>\n\n                <SalesTabs />\n            </div>\n        );\n    }\n}\n\nexport default Sales;\n","import React, { Component} from 'react';\nimport { Paper } from '@material-ui/core';\nimport { ViewState, EditingState, IntegratedEditing } from '@devexpress/dx-react-scheduler';\nimport {\n    Scheduler,\n    WeekView,\n    Appointments,\n    Toolbar,\n    DateNavigator,\n    TodayButton,\n    ViewSwitcher,\n    MonthView,\n    DayView,\n    AppointmentForm,\n    AppointmentTooltip,\n    ConfirmationDialog,\n    Resources,\n} from '@devexpress/dx-react-scheduler-material-ui';\nimport moment from 'moment';\nimport {\n    deleteAppointment,\n    updateAppointment,\n    addAppointment,\n    getAllAppointments,\n    getAllSchedulerCustomers,\n    getCookie,\n    postTotals\n} from '../Api/Api';\n\nconst currentDate = moment.now();\n\nclass Calendar extends Component<any,any> {\n    csrftoken: string;\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            data: [],\n            resources: [],\n        };\n        this.csrftoken = getCookie(document, 'csrftoken');\n    }\n\n    componentDidMount(){\n        this.getCustomers();\n        this.getAppointments();\n    }\n\n    getAppointments(){\n        getAllAppointments()\n            .then(res => this.setState({ data: res }))\n            .catch(err => console.log(err));\n    }\n\n    getCustomers(){\n        getAllSchedulerCustomers()\n            .then(res => this.setState({ resources: [{\n                fieldName: 'customer',\n                title: 'Customer',\n                instances: res,\n            }]}));\n    }\n\n    addAppointment(entry: any) {\n        addAppointment(entry, this.csrftoken)\n            .then(res => {\n                console.log(res);\n                postTotals({\n                    appointment: res.id,\n                    cash: 0, card: 0, check: 0, tax: 0, subtotal: 0, p_sub: 0, s_sub: 0\n                }, this.csrftoken)\n                    .then(res => console.log(res));\n            })\n            .catch(err =>  console.log(err));\n    }\n\n    updateAppointments(id: number, updated: any){\n        updateAppointment(id, updated, this.csrftoken)\n            .then(res => {\n                console.log(res);\n            })\n            .catch(err => console.log(err));\n    }\n\n    deleteAppointment(id: number){\n        deleteAppointment(id, this.csrftoken)\n            .then(res => {\n                console.log(res);\n            })\n            .catch(err => console.log(err));\n    }\n\n    //TODO: refactor\n    commitChanges = ({ added, changed, deleted }: any) => {\n        let { data } = this.state;\n        if (added) {\n            const startingAddedId = data.length > 0 ? data[data.length - 1].id + 1 : 0;\n            data = [...data, { id: startingAddedId, ...added }];\n            this.addAppointment(added);\n        }\n        if (changed) {\n            data = data.map((appointment: any) => {\n                if(changed[appointment.id]){\n                    let updated = { ...appointment, ...changed[appointment.id] };\n                    this.updateAppointments(appointment.id, updated);\n                    return updated;\n                } else {\n                    return appointment;\n                }\n            });\n        }\n        if (deleted !== undefined) {\n            this.deleteAppointment(deleted);\n            data = data.filter((appointment: any) => appointment.id !== deleted);\n        }\n\n        this.setState({ data: data });\n    }\n  \n    render() {\n        const { data, resources } = this.state;\n        return (\n            <Paper>\n                <Scheduler data={data} >\n                    <ViewState defaultCurrentViewName=\"Week\" defaultCurrentDate={currentDate}/>\n                    <EditingState onCommitChanges={this.commitChanges}/>\n                    <IntegratedEditing />\n                    <DayView />\n                    <WeekView startDayHour={8} endDayHour={22} />\n                    <MonthView />\n                    <Toolbar />\n                    <DateNavigator />\n                    <TodayButton />\n                    <ViewSwitcher />\n                    <Appointments />\n                    <ConfirmationDialog />\n                    <AppointmentTooltip showOpenButton showDeleteButton showCloseButton/>\n                    <AppointmentForm />\n                    <Resources data={resources} mainResourceName='customer' />\n                </Scheduler>\n            </Paper>\n        );\n    }\n}\n\nexport default Calendar;","import React, { Component} from 'react';\nimport Calendar from '../Calendar/Calendar'\n\nclass CalendarPage extends Component {\n    constructor(props: any) {\n        super(props);\n        this.state = {};\n    }\n\n    onCommitChanges(){}\n  \n    render() {\n        return (\n            <Calendar />\n        );\n    }\n}\n\nexport default CalendarPage;","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { getAllBrands, getAllCategories, getCookie, getProductsByBrand, getServiceByCategory, getServModsByService } from '../Api/Api';\n\nclass SaleForm extends Component<any,any> {\n    priceRef: React.RefObject<HTMLInputElement>;\n    csrftoken: string;\n    constructor(props:any){\n        super(props);\n        this.state = {\n            appointment: props.appointment,\n            type: props.type,\n            sale: -1,\n            group: -1,\n            quantity: 1,\n            price: -1,\n            payment: \"cash\",\n            categories: [],\n            brands: [],\n            services: [],\n            servmods: [],\n            products: [],\n            modPrices: [],\n            checked: [],\n        }\n        this.priceRef = React.createRef();\n        this.csrftoken = getCookie(document, 'csrftoken');\n    }\n\n    getItem = (saleId : number) : any => {}\n\n    addSale = () => {}\n\n    handleSubmit = (event: any) => {\n        event.preventDefault();\n        this.addSale();\n    }\n\n    handleNewServices = (group: number) => {\n        return ((res: any) => {\n            if(res[0]){\n                this.setState({ sale: res[0].id, services: res, group: group });\n                this.getServMods(res[0].id);\n                this.priceRef.current!.value = res[0].price;\n            } else {\n                this.setState({ services: res, group: group });\n            }\n        });\n    }\n\n    getServices = (category: number) => {\n        getServiceByCategory(category)\n            .then(this.handleNewServices(category))\n            .catch(err => console.log(err));\n    }\n\n    handleNewServMods = (id: number) => {\n        let prices: any[] = [];\n        let checked: boolean[] = [];\n        return ((res: any) => {\n            res.forEach((servmod: any) => {\n                prices.push(parseFloat(servmod.modifier.price));\n                checked.push(false);\n            });\n            this.setState({ modPrices: prices, checked: checked, servmods: res, saleId: id});\n        });\n    }\n\n    getServMods = (id: number) => {\n        getServModsByService(id)\n            .then(this.handleNewServMods(id))\n            .catch(err => console.log(err));\n    }\n\n    handleNewProducts = (res: any) => {\n        if(res[0]){\n            this.setState({ sale: res[0].id, products: res });\n            this.priceRef.current!.value = res[0].price;\n        } else {\n            this.setState({ products: res });\n        }\n    }\n\n    getProducts = (brand: number) => {\n        getProductsByBrand(brand)\n            .then(this.handleNewProducts)\n            .catch(err => console.log(err));\n    }\n\n    handleCategories = (res: any) => {\n        this.setState({ categories: res, group: res[0].id });\n        this.getServices(res[0].id);\n    }\n\n    getCategories = () => {\n        getAllCategories()\n            .then(this.handleCategories)\n            .catch(err => console.log(err));\n    }\n\n    handleBrands = (res: any) => {\n        this.setState({ brands: res, group: res[0].id });\n        this.getProducts(res[0].id);\n    }\n\n    getBrands = () => {\n        getAllBrands()\n            .then(this.handleBrands)\n            .catch(err => console.log(err));\n    }\n\n    handleChecked = (checked: boolean[], index: number) => {\n        let oldVal = parseFloat(this.priceRef.current!.value);\n        let change = this.state.modPrices[index];\n        change *= checked[index] ? 1 : -1;\n        let newVal = (oldVal + change).toFixed(2);\n        this.priceRef.current!.value = newVal;\n    }\n\n    brandRow = () => {\n        let brands = this.state.brands;\n        return (\n            <div>\n                <Form.Label>Brand</Form.Label>\n                <Form.Row>\n                    <Form.Group as=\"select\" onChange={(brand:any) => {\n                        let group = brand.target.value;\n                        this.setState({ group: group });\n                        this.getProducts(group);\n                    }}>\n                        { brands.map((brand: any) =>{\n                            return (\n                                <option value={brand.id} key={ brand.id }>{brand.name}</option>\n                            );\n                        })}\n                    </Form.Group>\n                </Form.Row>\n            </div>\n        )\n    }\n\n    categoryRow = () => {\n        let categories = this.state.categories;\n        return (\n            <div>\n                <Form.Label>Category</Form.Label>\n                <Form.Row>\n                    <Form.Group as=\"select\" onChange={(category:any) => {\n                        let group = category.target.value;\n                        this.getServices(group);\n                    }}>\n                        { categories.map((category:any) => {\n                            return (\n                                <option value={category.id} key={ category.id }>{category.name}</option>\n                            );\n                        })}\n                    </Form.Group>\n                </Form.Row>\n            </div>\n        );\n    }\n\n    onChangeSale = (item: any) => {\n        let id = item.target.value;\n        this.priceRef.current!.value = this.getItem(id).price;\n        this.setState({ sale: id })\n        console.log(id);\n        if(this.state.type === 'service') {\n            this.getServMods(id);\n        }\n    }\n\n    saleOption = (item: any) => {\n        return (\n            <option value={item.id} key={ item.id }>{item.name}</option>\n        );\n    }\n\n    itemRow = (items: any[]) => {\n        return (\n            <Form.Row>\n                <Form.Group as=\"select\" onChange={ this.onChangeSale }>\n                    { items.map(this.saleOption) }\n                </Form.Group>\n            </Form.Row>\n        );\n    }\n\n    productRow = () => {\n        let products = this.state.products;\n        return (\n            <div>\n                <Form.Label>Product</Form.Label>\n                { this.itemRow(products) }\n            </div>\n        );\n    }\n\n    serviceRow = () => {\n        let services = this.state.services;\n        return (\n            <div>\n                <Form.Label>Service</Form.Label>\n                { this.itemRow(services) }\n            </div>\n        );\n    }\n\n    modifierRow = () => {\n        let row = (\n            <Form.Group>\n                {this.state.servmods.map((servmod: any, index: number) => {\n                    return (<Form.Check\n                        type={'checkbox'}\n                        label={servmod.modifier.name + \" -> \" + servmod.modifier.price}\n                        checked={\n                            this.state.checked[index] // this keeps checkbox and checked value the same\n                        }\n                        onChange={ () => {\n                            let checked = this.state.checked;\n                            checked[index] = !checked[index];\n                            this.setState({ checked: checked });\n                            this.handleChecked(checked, index);\n                        }}\n                    />);\n                })}\n            </Form.Group>\n        );\n        return row;\n    }\n\n    quantityRow = () : JSX.Element => {\n        let row = (\n            <Form.Row>\n                <Form.Group onChange={(quantity: any) => {\n                    this.setState({ quantity: quantity.target.value });\n                }}>\n                    <Form.Label>Quantity</Form.Label>\n                    <Form.Control type=\"number\" min=\"1\" defaultValue=\"1\"/>\n                </Form.Group>\n            </Form.Row>\n        )\n        return row;\n    }\n\n    priceRow = () => {\n        let row = (\n            <Form.Row>\n                <Form.Group onChange={(price: any) => {\n                    this.setState({ price: price.target.value });\n                }}>\n                    <Form.Label>Unit Price</Form.Label>\n                    <Form.Control type=\"text\" ref={this.priceRef} defaultValue={0}/>\n                </Form.Group>\n            </Form.Row>\n        );\n        return row;\n    }\n\n    paymentRow = () => {\n        return (\n            <Form.Row>\n                <Form.Group as=\"select\" onChange={(payment: any) => {\n                    this.setState({ payment: payment.target.value })\n                }}>\n                    <Form.Label>Payment Type</Form.Label>\n                    <option value=\"cash\">Cash</option>\n                    <option value=\"card\">Credit/Debit Card</option>\n                    <option value=\"check\">Check</option>\n                    <option value=\"split\">Split</option>\n                </Form.Group>\n            </Form.Row>\n        );\n    }\n}\n\nexport default SaleForm\n","import React from 'react';\nimport SaleForm from './SaleForm';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { addSSale } from '../Api/Api';\n\ninterface prop { appointment: number }\n\nclass ServiceSaleForm extends SaleForm {\n    constructor(props: prop){\n        super(props);\n        this.state = {\n            appointment: props.appointment,\n            type: \"service\",\n            sale: -1,\n            group: -1,\n            price: -1,\n            payment: \"cash\",\n            categories: [],\n            services: [],\n            servmods: [],\n            modPrices: [],\n            checked: [],\n        }\n    }\n\n    componentDidMount = () => {\n        this.getCategories();\n    }\n\n    getItem = (id: number) => {\n        return this.state.services.find((e: any) => Number(e.id) === Number(id));\n    }\n\n    getData = (item: any) => {\n        return (\n            {\n                appointment: this.state.appointment,\n                salePrice: this.priceRef.current!.value,\n                service: item.id,\n                payment: this.state.payment\n            }\n        )\n    }\n\n    addSale = () => {\n        let item = this.getItem(this.state.sale);\n        let data = this.getData(item);\n        addSSale(data, this.csrftoken)\n            .then(res => {\n                window.location.reload();\n            })\n            .catch(err =>  console.log(err));\n    }\n\n    render() {\n        let categoryRow = this.categoryRow();\n        let serviceRow = this.serviceRow();\n        let priceRow = this.priceRow();\n        let modifierRow = this.modifierRow();\n        return (\n            <Form onSubmit={ this.handleSubmit } id=\"newSaleForm\">\n                <div style={{padding:'1rem 1.25rem', border:'1px solid', borderColor:'#ced4da'}}>\n                { categoryRow }\n                { serviceRow }\n                { modifierRow }\n                { priceRow }\n                <br></br>\n                <Button variant=\"success\" type=\"submit\"> Add </Button>\n                </div>\n            </Form>\n        );\n    }\n}\n\nexport default ServiceSaleForm\n","import React from 'react';\nimport SaleForm from './SaleForm';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { addPSale } from '../Api/Api';\n\ninterface prop { appointment: number }\n\nclass ProductSaleForm extends SaleForm {\n    constructor(props: prop){\n        super(props);\n        this.state = {\n            appointment: props.appointment,\n            type: \"product\",\n            sale: -1,\n            group: -1,\n            quantity: 1,\n            price: -1,\n            payment: \"cash\",\n            brands: [],\n            products: [],\n        }\n    }\n\n    componentDidMount = () => {\n        this.getBrands();\n    }\n\n    getItem = (id: number) => {\n        return this.state.products.find((e: any) => Number(e.id) === Number(id));\n    }\n\n    getData = (item: any) => {\n        return (\n            {\n                appointment: this.state.appointment,\n                quantity: this.state.quantity,\n                unitSalePrice: this.priceRef.current!.value,\n                product: item.id,\n                payment: this.state.payment\n            }\n        )\n    }\n\n    addSale = () => {\n        let item = this.getItem(this.state.sale);\n        let data = this.getData(item);\n        addPSale(data, this.csrftoken)\n            .then(res => {\n                window.location.reload();\n            })\n            .catch(err =>  console.log(err));\n    }\n\n    render() {\n        let brandRow = this.brandRow();\n        let productRow = this.productRow();\n        let quantityRow = this.quantityRow();\n        let priceRow = this.priceRow();\n        return (\n            <Form onSubmit={ this.handleSubmit } id=\"newSaleForm\">\n                <div style={{padding:'1rem 1.25rem', border:'1px solid', borderColor:'#ced4da'}}>\n                { brandRow }\n                { productRow }\n                { quantityRow }\n                { priceRow }\n                <br></br>\n                <Button variant=\"success\" type=\"submit\"> Add </Button>\n                </div>\n            </Form>\n        );\n    }\n}\n\nexport default ProductSaleForm\n","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { getCookie, putTotals } from '../Api/Api';\nimport { Prompt } from 'react-router-dom';\n\ninterface props {\n    appointment: number;\n    cash?: number;\n    card?: number;\n    check?: number;\n    total: number;\n    p_sub: number;\n    s_sub: number;\n    subtotal: number;\n    tax: number;\n}\n\nclass SplitForm extends Component<props,totals> {\n    csrftoken: string;\n    constructor(props: props){\n        super(props);\n        this.state = {\n            appointment: props.appointment,\n            cash: props.cash ? props.cash : 0,\n            card: props.card ? props.card : 0,\n            check: props.check ? props.check : 0,\n            p_sub: props.p_sub,\n            s_sub: props.s_sub,\n            subtotal: props.subtotal,\n            tax: props.tax,\n        };\n        this.csrftoken = getCookie(document, 'csrftoken');\n    }\n\n    total = () => { return Number(this.props.total); }\n\n    splitTotal = () => {\n        return (\n            Number(this.state.cash) +\n            Number(this.state.card) +\n            Number(this.state.check)\n        );\n    }\n\n    onSubmit = (event: any) => {\n        let total = this.total();\n        let splitTotal = this.splitTotal();\n        if(Math.abs(total - splitTotal) > .0001){\n            alert(\n                \"The split total ($\" +\n                Number(splitTotal).toFixed(2) + \n                \") is not equal to the calculated total ($\" +\n                Number(total).toFixed(2) + \")\"\n            );\n            return;\n        }\n        event.preventDefault();\n        let totals = {\n            appointment: this.state.appointment,\n            cash: this.state.cash,\n            card: this.state.card,\n            check: this.state.check,\n            tax: this.state.tax,\n            p_sub: this.state.p_sub,\n            s_sub: this.state.s_sub,\n            subtotal: this.state.subtotal,\n        };\n        putTotals(totals, this.csrftoken)\n    }\n\n    blockNav = () : boolean => {\n        return Math.abs(this.total() - this.splitTotal()) > .0001;    \n    }\n\n    cashRow = () => {\n        return (\n            <Form.Row>\n                <Form.Group onChange={ (cash: any) => {\n                        this.setState({cash: cash.target.value})\n                    }}>\n                    <Form.Label>Cash</Form.Label>\n                    <Form.Control defaultValue={this.props.cash}/>\n                </Form.Group>\n            </Form.Row>\n        );\n    }\n\n    cardRow = () => {\n        return (\n            <Form.Row>\n                <Form.Group onChange={ (card: any) => {\n                        this.setState({card: card.target.value})\n                    }}>\n                    <Form.Label>card</Form.Label>\n                    <Form.Control defaultValue={this.props.card}/>\n                </Form.Group>\n            </Form.Row>\n        );\n    }\n\n    checkRow = () => {\n        return (\n            <Form.Row>\n                <Form.Group onChange={ (check: any) => {\n                        this.setState({check: check.target.value})\n                    }}>\n                    <Form.Label>check</Form.Label>\n                    <Form.Control defaultValue={this.props.check}/>\n                </Form.Group>\n            </Form.Row>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n            <Prompt\n                when={this.blockNav()}\n                message={\n                    \"The split total ($\" +\n                    Number(this.splitTotal()).toFixed(2) + \n                    \") is not equal to the calculated total ($\" +\n                    Number(this.total()).toFixed(2) + \")\" +\n                    \"\\n\\nPress cancel to remain on page and fix split entries. Press ok to leave page.\" +\n                    \"\\n\\nWARNING! It is recommended that you click cancel and fix split entries.\"\n                }\n            />\n            <Form id=\"splitForm\">\n                { this.cashRow() }\n                { this.cardRow() }\n                { this.checkRow() }\n                <Button variant=\"success\" onClick={this.onSubmit}> Save </Button>\n            </Form>\n            </div>\n        );\n    }\n}\n\nexport default SplitForm","import React, { Component } from \"react\";\nimport Form from 'react-bootstrap/Form';\nimport SplitForm from './SplitForm';\nimport { postTotals, putTotals, getCookie } from '../Api/Api';\n\nclass SelectPaymentForm extends Component<any,any> {\n    csrftoken: string;\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            default: props.default,\n            appointment: props.appointment,\n            total: props.total,\n            p_sub: props.p_sub,\n            s_sub: props.s_sub,\n            subtotal: props.subtotal,\n            tax: props.tax,\n            split: props.default === \"split\",\n            totals: props.totals,\n        };\n        this.csrftoken = getCookie(document, 'csrftoken');\n    }\n\n    componentDidMount = () => {\n        if( this.props.post ){\n            postTotals(this.props.totals, this.csrftoken)\n                .then(res => {\n                    //console.log(res)\n                })\n                .catch(err => console.log(err));\n        } else if(!this.state.split) {\n            this.onChangePayment({target: {value: this.state.default}});\n        }\n    }\n\n    getTotals = (method: string) : totals => {\n        let cash = method === \"cash\" ? this.state.total : 0;\n        let card = method === \"card\" ? this.state.total : 0;\n        let check = method === \"check\" ? this.state.total : 0;\n\n        return ({\n            appointment: this.state.appointment,\n            cash: cash,\n            card: card,\n            check: check,\n            subtotal: this.state.subtotal,\n            tax: this.state.tax,\n            p_sub: this.state.p_sub,\n            s_sub: this.state.s_sub,\n        });\n    }\n\n    onChangePayment = (payment: any) => {\n        let split = payment.target.value === \"split\";\n        this.setState({split: split});\n        if(!split){\n            let totals = this.getTotals(payment.target.value);\n            this.setState({totals: totals});\n            putTotals(totals, this.csrftoken)\n                .then(res => {\n                    //console.log(res)\n                })\n                .catch(err => console.log(err));\n        }\n    }\n\n    paymentRow = () => {\n        return (\n            <div>\n                <Form.Label><h5>Select Payment Method</h5></Form.Label>\n                <Form.Row>\n                    <Form.Group as=\"select\" onChange={this.onChangePayment} defaultValue={this.state.default}>\n                        <option value=\"cash\">Cash</option>\n                        <option value=\"card\">Card</option>\n                        <option value=\"check\">Check</option>\n                        <option value=\"split\">Split</option>\n                    </Form.Group>\n                </Form.Row>\n            </div>\n        );\n    }\n\n    split = () => {\n        return (\n            <SplitForm\n                cash={this.state.totals.cash}\n                card={this.state.totals.card}\n                check={this.state.totals.check}\n                p_sub={this.state.p_sub}\n                s_sub={this.state.s_sub}\n                subtotal={this.state.subtotal}\n                tax={this.state.tax}\n                total={this.state.total}\n                appointment={this.state.appointment}/>\n        );\n    }\n\n    render() {\n        return (\n            <div>\n                { this.paymentRow() }\n                { this.state.split ? this.split() : null }\n            </div>\n        );\n    }\n}\n\nexport default SelectPaymentForm","import React, { Component } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { getAppointmentDetails, getAppointmentPSales, getAppointmentSSales, getAppointmentTotals } from '../Api/Api';\nimport ServiceSaleForm from './ServiceSaleForm';\nimport ProductSaleForm from './ProductSaleForm';\nimport AddAccordion from '../Shared/AddAccordion';\nimport PSalesTable from '../Sales/Tables/PSalesTable';\nimport SSalesTable from '../Sales/Tables/SSalesTable';\nimport SelectPaymentForm from './SelectPaymentForm';\nimport { NavLink } from 'react-router-dom';\nimport { Col, Container, Row } from 'react-bootstrap';\n\nconst TAX_RATE = 0.055;\n\ninterface Props extends RouteComponentProps { id: number; };\n\nclass Appointment extends Component<Props,any>{\n    constructor(props: any){\n        super(props);\n        this.state = {\n            appointment: {\n                id: props.match.params.id,\n            },\n            services: [],\n            products: [],\n            loaded: false,\n            p_subtotal: 0,\n            s_subtotal: 0,\n            subtotal: 0,\n            tax: 0,\n            total: 0,\n            totals: undefined,\n            post: false,\n        };\n    }\n\n    componentDidMount(){\n        this.loadData();\n    }\n\n    defaultPayment = (totals: any) : string => {\n        const cash = Number(totals.cash);\n        const card = Number(totals.card);\n        const check = Number(totals.check);\n        if(cash !== 0 && card === 0 && check === 0){\n            return \"cash\";\n        } else if(cash === 0 && card !== 0 && check === 0){\n            return \"card\";\n        } else if(cash === 0 && card === 0 && check !== 0) {\n            return \"check\";\n        } else if(cash === 0 && card === 0 && check === 0){\n            return \"cash\";\n        } else {\n            return \"split\";\n        }\n    }\n\n    round = (num: number) => { return (Math.round(num * 100) / 100); }\n    roundAndFix = (num: number) => { return (Math.round(num * 100) / 100).toFixed(2); }\n\n    handlePromises = (res: any) => {\n        let s_subtotal = 0;\n        let p_subtotal = 0;\n\n        res[1].forEach((p: any) => {\n            p_subtotal = this.round(p_subtotal + Number(p.subtotal));\n        });\n        res[2].forEach((s: any) => {\n            s_subtotal = this.round(s_subtotal + Number(s.salePrice));\n        });\n\n        const tax = p_subtotal * TAX_RATE;\n        const subtotal = p_subtotal + s_subtotal;\n        const total = subtotal + tax\n        \n        const rounded = this.roundAndFix(total);\n        const roundedSubtotal = this.roundAndFix(p_subtotal + s_subtotal);\n        const roundedTax = this.roundAndFix(tax);\n        \n        this.setState({\n            appointment: res[0],\n            products: res[1],\n            services: res[2],\n            loaded: true,\n            total: rounded,\n            p_subtotal: this.roundAndFix(p_subtotal),\n            s_subtotal: this.roundAndFix(s_subtotal), \n            subtotal: roundedSubtotal,\n            tax: roundedTax,\n            totals: res[3] ? res[3] : { appointment: this.state.appointment.id, cash: 0, card: 0, check: 0, tax: 0, subtotal: 0 },\n            post: res[3] ? false : true,\n        });\n    }\n\n    loadData = () => {\n        const p1 = getAppointmentDetails(this.state.appointment.id);\n        const p2 = getAppointmentPSales(this.state.appointment.id);\n        const p3 = getAppointmentSSales(this.state.appointment.id);\n        const p4 = getAppointmentTotals(this.state.appointment.id);\n        Promise.all([p1,p2,p3,p4])\n            .then( this.handlePromises )\n            .catch(err => {\n                Promise.all([p1,p2,p3])\n                    .then( this.handlePromises )\n                    .catch(err => console.log(err));\n            });\n    }\n\n    rightJustifyRow = (text: string, index: number) => {\n        return (\n            <Row style={{ justifyContent: \"right\" }} key={index}>\n                <h5>{ text }</h5>\n            </Row>\n        );\n    }\n\n    header = () => {\n        return (\n            <>\n                <h1> Appointment #{this.state.appointment.id} </h1>\n                <div style={{ display: 'flex' }}>\n                    <NavLink to={`/customer/${this.state.appointment.customer.id}`}>\n                            <h3> { this.state.appointment.customer.first_name } { this.state.appointment.customer.last_name } </h3>\n                    </NavLink>\n                </div>\n            </>\n        );\n    }\n\n    body = () => {\n        const sForm = <ServiceSaleForm appointment={this.state.appointment.id}/>;\n        const pForm = <ProductSaleForm appointment={this.state.appointment.id}/>;\n        const sAccordion = <AddAccordion text='Include Service Sale' form={sForm} />\n        const pAccordion = <AddAccordion text='Include Product Sale' form={pForm} />\n\n        return (\n            <>\n                <div>\n                    {sAccordion}\n                    <SSalesTable id={this.state.appointment.id} />\n                </div>\n                <div>\n                    {pAccordion}\n                    <PSalesTable id={this.state.appointment.id} />\n                </div>\n            </>\n        );\n    }\n\n    footer = () => {\n        const { totals, appointment, p_subtotal, s_subtotal, subtotal, tax, total, post } = this.state;\n        const names = [\"Product Subtotal:\", \"Product Tax:\", \"Service Subtotal:\", \"Subtotal:\", \"Total\"];\n        const amounts = [p_subtotal, tax, s_subtotal, subtotal, total];\n        const values = amounts.map( a => \"$\" + a );\n\n        return (\n            <Container fluid style={{margin: \"1rem 0rem\"}}>\n                <Row>\n                    <Col>\n                        <SelectPaymentForm\n                            default     = { this.defaultPayment(totals) }\n                            appointment = { appointment.id }\n                            p_sub       = { p_subtotal }\n                            s_sub       = { s_subtotal }\n                            subtotal    = { subtotal }\n                            tax         = { tax }\n                            total       = { total }\n                            totals      = { totals }\n                            post        = { post }\n                        />\n                    </Col>\n                    <Col md=\"auto\" style={{ textAlign: \"right\", margin: \"0rem 1rem\"}}>\n                        { names.map(this.rightJustifyRow) }\n                    </Col>\n                    <Col md=\"auto\">\n                        <Container fluid style={{ margin: \"0rem\", padding: \"0rem\" } } >\n                            { values.map(this.rightJustifyRow) }\n                        </Container>\n                    </Col>\n                </Row>\n            </Container>\n        );\n    }\n\n    render() {\n        if(this.state.loaded){\n            return (\n                <div>\n                    { this.header() }\n                    { this.body()   }\n                    { this.footer() }\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default Appointment\n","import React, { Component } from \"react\";\nimport ProductForm from './ProductForm';\n\ninterface props {\n    product: product;\n}\n\nclass UpdateProductForm extends Component<props, product> {\n    constructor(props: props){\n        super(props);\n        this.state = {\n            id: props.product.id,\n            name: props.product.name,\n            price: props.product.price,\n            brand: props.product.brand,\n        }\n    }\n\n    render() {\n        let product = this.state;\n        return(\n            <ProductForm\n                request=\"put\"\n                product={product}\n            />\n        );\n    }\n}\n\nexport default UpdateProductForm","import React, { Component } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { getProduct } from '../Api/Api';\nimport AddAccordion from '../Shared/AddAccordion';\nimport UpdateProductForm from './UpdateProductForm';\n\ninterface Props extends RouteComponentProps { id: number; };\n\nconst EMPTY_BRAND = {\n    id: 0,\n    name: \"\",\n}\n\nconst EMPTY_PRODUCT = {\n    id: 0,\n    name: \"\",\n    brand: EMPTY_BRAND,\n    price: \"\"\n}\n\nclass Product extends Component<Props,any> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            id: props.match.params.id,\n            product: EMPTY_PRODUCT,\n            loaded: false,\n        };\n    }\n\n    product = () => {\n        let { id, name, brand, price } = this.state.product;\n        return ({\n            id: id,\n            name: name,\n            brand: brand.id,\n            price: price,\n        });\n    }\n\n    getProduct = () => {\n        getProduct(this.state.id)\n            .then(res => {\n                this.setState({ product: res, loaded: true });\n            })\n            .catch(err => console.log(err));\n    }\n\n    componentDidMount() {\n        this.getProduct();\n    }\n\n    render() {\n        if(!this.state.loaded) { return null; }\n\n        let { product } = this.state;\n        let { brand, name, price } = product;\n        let f = <UpdateProductForm product={ this.product() }/>\n        let a = <AddAccordion text=\"Edit\" form={f}/>\n        return (\n            <div>\n                <h1>{ brand.name } - { name }</h1>\n                <h3>${ price }</h3>\n                { a }\n            </div>\n        );\n    }\n}\n\nexport default Product","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { addServMod, getAllModifiers, getCookie } from '../Api/Api';\n\ninterface PropsType { id: number };\n\nclass ConnectModifierForm extends Component<PropsType,any> {\n    csrftoken: string;\n    constructor(props: PropsType){\n        super(props);\n        this.state = {\n            id: props.id,\n            modID: 1,\n            modifiers: [],\n        };\n        this.csrftoken = getCookie(document, 'csrftoken');\n    }\n\n    componentDidMount = () => {\n        this.getModifiers();\n    }\n\n    getModifiers = () => {\n        getAllModifiers()\n            .then(res => {\n                this.setState({ modifiers: res});\n            })\n            .catch(err => console.log(err));\n    }\n\n    handleSubmit = (event: any) => {\n        event.preventDefault();\n        this.connectModifier();\n    }\n\n    connectModifier() {\n        let data = { service: parseInt(this.state.id), modifier: parseInt(this.state.modID)}\n        addServMod(data, this.csrftoken)\n            .then(res => {\n                window.location.reload();\n            })\n            .catch(() =>  {\n                alert(\"Error: Could not connect modifier to service.\")\n            });\n    }\n\n    onChange = (mod: any) => {\n        let id = mod.target.value;\n        this.setState({ modID: id});\n    }\n\n    render() {\n        return (\n            <Form onSubmit={ this.handleSubmit } id=\"connectModifierForm\">\n                <Form.Group as=\"select\" onChange={this.onChange}>\n                    {this.state.modifiers.map((item: any) => {\n                        return (<option value={item.id} key={item.id}>{item.name}</option>);\n                    })}\n                </Form.Group>\n                <br></br>\n                <Button variant=\"success\" type=\"submit\"> Connect </Button>\n            </Form>\n        );\n    }\n}\n\nexport default ConnectModifierForm","import React, { Component } from 'react';\nimport ConnectModifierForm from './ConnectModifierForm';\nimport AddAccordion from '../Shared/AddAccordion';\n\ninterface PropsType { id: number };\n\nclass ConnectModifier extends Component<PropsType,any> {\n    constructor(props: PropsType){\n        super(props);\n        this.state = {\n            id: props.id\n        };\n    }\n\n    render() {\n        let form = <ConnectModifierForm id={this.state.id}/>;\n        return (\n            <AddAccordion text={\"Connect Modifier\"} form={form}/>\n        );\n    }\n}\n\nexport default ConnectModifier","import React, { Component } from \"react\";\nimport ServiceForm from './ServiceForm';\n\ninterface propType {\n    service: service,\n}\n\nclass UpdateServiceForm extends Component<any, any> {\n    constructor(props: propType){\n        super(props);\n        this.state = {\n            id: props.service.id,\n            name: props.service.name,\n            price: props.service.price,\n            category: props.service.category,\n        }\n    }\n\n    render() {\n        let service = this.state;\n        return(\n            <ServiceForm\n                request=\"put\"\n                service={service}\n            />\n        );\n    }\n}\n\nexport default UpdateServiceForm","import React, { Component } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport ServiceCard from './ServiceCard';\nimport { CardDeck } from 'react-bootstrap';\nimport ConnectModifier from './ConnectModifier';\nimport UpdateServiceForm from './UpdateServiceForm';\nimport AddAccordion from '../Shared/AddAccordion';\nimport { getService, getServModsByService } from '../Api/Api';\n\ninterface Props extends RouteComponentProps { id: number; };\n\nclass Service extends Component<Props,any> {\n    constructor(props: any){\n        super(props);\n        this.state = {\n            service: {\n                id: props.match.params.id,\n                name: \"\",\n                price: \"\",\n                category: {\n                    id: 0,\n                    name: \"\",\n                },\n            },\n            servmods: [],\n            loaded: false,\n        };\n    }\n\n    componentDidMount() {\n        this.getServiceInfo();\n        this.getServmods();\n    }\n\n    getServiceInfo() {\n        getService(this.state.service.id)\n            .then(res => this.setState({ service: res, loaded: true}))\n            .catch(err => console.log(err))\n    }\n\n    getServmods() {\n        getServModsByService(this.state.service.id)\n            .then(res => this.setState({ servmods: res }))\n            .catch(err => console.log(err))\n    }\n\n    service = () => {\n        return ({\n            id: this.state.service.id,\n            name: this.state.service.name,\n            price: this.state.service.price,\n            category: this.state.service.category,\n        });\n    }\n\n    serviceAccordion = () => {\n        let f = <UpdateServiceForm service={ this.service() }/>\n        return (<AddAccordion text='Edit Info' form={f} />);\n    }\n\n    render() {\n        if(this.state.loaded){\n            let servmods = this.state.servmods;\n            let a = this.serviceAccordion();\n            return (\n                <div>\n                    <h1>{this.state.service.category.name} - {this.state.service.name}</h1>\n                    <h3>${this.state.service.price}</h3>\n                    { a }\n                    <ConnectModifier id={this.state.service.id}/>\n                    <CardDeck style={{ flexWrap: \"wrap\", margin:'0rem -.5rem'}}>\n                        {\n                            servmods.map((servmod: any) =>\n                                <ServiceCard\n                                    key={servmod.id}\n                                    id={servmod.modifier.id}\n                                    s_id={servmod.service.id}\n                                    name={servmod.modifier.name}\n                                    price={servmod.modifier.price}\n                                    servmod={true}\n                                />\n                            )\n                        }\n                    </CardDeck>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default Service\n","import React, { Component } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport Table from 'react-bootstrap/Table';\nimport PSalesTableEntry from './Tables/PSalesTableEntry';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport { deletePSale, getCookie, getPSaleDetailed } from '../Api/Api';\n\ninterface Props extends RouteComponentProps { id: number; };\n\nclass PSale extends Component<Props,any> {\n    csrftoken: string;\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            id: props.match.params.id,\n            psale: {\n                id: 0,\n                appointment: {},\n                product: {},\n                name: \"\",\n                quantity: 0,\n                unitSalePrice: \"\",\n                unitTax: 0,\n                payment: \"\",\n                subtotal: \"\",\n                tax: 0,\n                total: 0,\n            },\n        };\n        this.csrftoken = getCookie(document, 'csrftoken');\n    }\n\n    componentDidMount = () => {\n        this.getPSale();\n    }\n\n    getPSale(){\n        getPSaleDetailed(this.state.id)\n            .then(res => {\n                this.setState({ psale: res });\n            })\n            .catch(err => console.log(err));\n    }\n\n    deleteSale = () => {\n        deletePSale(this.state.psale.id, this.csrftoken)\n            .then(() => {\n                window.location.href = `/appointment/${this.state.psale.appointment.id}`;\n            })\n            .catch(err =>  console.log(err));\n    }\n\n    table = () => {\n        return (\n            <Table striped bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                        <th>Date</th>\n                        <th>PSID</th>\n                        <th>AID</th>\n                        <th>PID</th>\n                        <th>Brand</th>\n                        <th>Name</th>\n                        <th>Qty</th>\n                        <th>Unit Price</th>\n                        <th>Unit Tax</th>\n                        <th>Subtotal</th>\n                        <th>Tax</th>\n                        <th>Total</th>\n                    </tr>\n                </thead>\n                <tbody>\n                <PSalesTableEntry\n                    key={this.state.psale.id}\n                    id={this.state.psale.id}\n                    appointment={this.state.psale.appointment.id}\n                    product={this.state.psale.product.id}\n                    brand={this.state.psale.product.brand.name}\n                    name={this.state.psale.name}\n                    quantity={this.state.psale.quantity}\n                    unitSalePrice={this.state.psale.unitSalePrice}\n                    subtotal={this.state.psale.subtotal}\n                    unitTax={this.state.psale.unitTax}\n                    tax={this.state.psale.tax}\n                    total={this.state.psale.total}\n                    date={this.state.psale.appointment.startDate}\n                />\n                </tbody>\n            </Table>\n        );\n    }\n\n    render() {\n        const divStyle = {\n            padding: \"1rem 0rem\",\n        };\n        if(!this.state.psale.id) return null;\n        return (\n            <div>\n                <Link to={`/appointment/${this.state.psale.appointment.id}`} >\n                    Appointment {this.state.psale.appointment.id}\n                </Link>\n                <div style={divStyle}>\n                    <Button variant=\"danger\" onClick={this.deleteSale}>Delete Sale</Button>\n                </div>\n                {this.table()}\n            </div>\n        );\n    }\n}\n\nexport default PSale;\n","import React, { Component } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport Table from 'react-bootstrap/Table';\nimport SSalesTableEntry from './Tables/SSalesTableEntry';\nimport Button from 'react-bootstrap/Button';\nimport { Link } from 'react-router-dom';\nimport { deleteSSale, getCookie, getSSaleDetailed } from '../Api/Api';\n\ninterface Props extends RouteComponentProps { id: number; };\n\nclass SSale extends Component<Props,any> {\n    csrftoken: string;\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            id: props.match.params.id,\n            ssale: {\n                id: 0,\n                appointment: {},\n                service: {},\n                name: \"\",\n                payment: \"\",\n                salePrice: \"\",\n            },\n        };\n        this.csrftoken = getCookie(document, 'csrftoken');\n    }\n\n    componentDidMount = () => {\n        this.getSSale();\n    }\n\n    getSSale(){\n        getSSaleDetailed(this.state.id)\n            .then(res => {\n                this.setState({ ssale: res });\n            })\n            .catch(err => console.log(err));\n    }\n\n    deleteSale = () => {\n        deleteSSale(this.state.ssale.id, this.csrftoken)\n            .then(res => {\n                //console.log(res);\n                window.location.href = `/appointment/${this.state.ssale.appointment.id}`;\n            })\n            .catch(err =>  console.log(err));\n    }\n\n    table = () => {\n        return (\n            <Table striped bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                        <th>Date</th>\n                        <th>SSID</th>\n                        <th>AID</th>\n                        <th>SID</th>\n                        <th>Name</th>\n                        <th>Price</th>\n                    </tr>\n                </thead>\n                <tbody>\n                <SSalesTableEntry\n                    key={this.state.ssale.id}\n                    id={this.state.ssale.id}\n                    appointment={this.state.ssale.appointment.id}\n                    service={this.state.ssale.service.id}\n                    name={this.state.ssale.name}\n                    salePrice={this.state.ssale.salePrice}\n                    date={this.state.ssale.appointment.startDate}\n                />\n                </tbody>\n            </Table>\n        );\n    }\n\n    render() {\n        const divStyle = {\n            padding: \"1rem 0rem\",\n        };\n        if(this.state.ssale.id === 0) return null;\n        return (\n            <div>\n                <Link to={`/appointment/${this.state.ssale.appointment.id}`}>\n                    Appointment {this.state.ssale.appointment.id}\n                </Link>\n                <div style={divStyle}>\n                    <Button variant=\"danger\" onClick={this.deleteSale}>Delete Sale</Button>\n                </div>\n                {this.table()}\n            </div>\n        );\n    }\n}\n\nexport default SSale;\n","import React, { Component } from \"react\";\nimport ModifierForm from \"./ModifierForm\";\n\ninterface props {\n    modifier: modifier,\n}\n\nclass UpdateModifierForm extends Component<any, any> {\n    constructor(props: props){\n        super(props);\n        this.state = {\n            id: props.modifier.id,\n            name: props.modifier.name,\n            price: props.modifier.price,\n        }\n    }\n\n    render() {\n        let modifier = this.state;\n        return(\n            <ModifierForm\n                request=\"put\"\n                modifier={modifier}\n            />\n        );\n    }\n}\n\nexport default UpdateModifierForm","import React, { Component } from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { getModifier } from '../Api/Api';\nimport AddAccordion from '../Shared/AddAccordion';\nimport UpdateModifierForm from './UpdateModifierForm';\n// import AddAccordion from '../Shared/AddAccordion';\n// import UpdateProductForm from './UpdateProductForm';\n\ninterface Props extends RouteComponentProps { id: number; };\n\nclass Modifier extends Component<Props,any> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            id: props.match.params.id,\n            modifier: {\n                id: 0,\n                name: \"\",\n                price: \"\",\n            },\n            loaded: false,\n        };\n    }\n\n    modifier = () => {\n        let { id, name, price } = this.state.modifier;\n        return ({\n            id: id,\n            name: name,\n            price: price,\n        });\n    }\n\n    getModifier = () => {\n        getModifier(this.state.id)\n            .then(res => {\n                this.setState({ modifier: res, loaded: true });\n            })\n            .catch(err => console.log(err));\n    }\n\n    componentDidMount() {\n        this.getModifier();\n    }\n\n    render() {\n        if(!this.state.loaded) { return null; }\n\n        const { modifier } = this.state;\n        const { name, price } = modifier;\n        const f = <UpdateModifierForm modifier={ this.modifier() } />\n        const a = <AddAccordion text=\"Edit\" form={f} />\n        return (\n            <div>\n                <h1>{ name }</h1>\n                <h3>${ price }</h3>\n                { a }\n            </div>\n        );\n    }\n}\n\nexport default Modifier","import React, { Component } from 'react';\n\nexport default class Footer extends Component {\n    constructor(props: any){\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div style={{ margin: \"3rem 0rem\"}}>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Appointments from '../Pages/Appointments';\nimport Customers from '../Pages/Customers';\nimport Home from '../Pages/Home';\nimport Products from '../Pages/Products';\nimport Services from '../Pages/Services';\nimport Bar from '../Common/Navbar';\nimport Customer from '../Customer/Customer';\nimport Sales from '../Pages/Sales';\nimport CalendarPage from '../Pages/CalendarPage';\nimport Appointment from '../Appointment/Appointment';\nimport Product from '../Product/Product';\nimport Service from '../Service/Service';\nimport PSale from '../Sales/PSale';\nimport SSale from '../Sales/SSale';\nimport Modifier from '../Service/Modifier';\n\nimport Moment from 'moment';\nimport momentLocalizer from 'react-widgets-moment';\nimport Footer from '../Common/Footer';\n\nMoment.locale('en');\nmomentLocalizer();\n\nclass App extends Component {\n    constructor(props: any) {\n        super(props);\n        this.state = {};\n    }\n    render() {\n        return (\n            <BrowserRouter>\n                <Bar />\n                <div style={{margin: '1rem 4rem'}}>\n                    <Switch>\n                        <Route path=\"/\" component={Home} exact/>\n                        <Route path=\"/customers\" component={Customers} exact/>\n                        <Route path=\"/products\" component={Products} exact/>\n                        <Route path=\"/appointments\" component={Appointments} exact/>\n                        <Route path=\"/services\" component={Services} exact/>\n                        <Route path=\"/customer/:id\" component={Customer} exact/>\n                        <Route path=\"/appointment/:id\" component={Appointment} exact/>\n                        <Route path=\"/service/:id\" component={Service} exact/>\n                        <Route path=\"/modifier/:id\" component={Modifier} exact/>\n                        <Route path=\"/product/:id\" component={Product} exact/>\n                        <Route path=\"/psale/:id\" component={PSale} exact/>\n                        <Route path=\"/ssale/:id\" component={SSale} exact/>\n                        <Route path=\"/sales\" component={Sales} exact/>\n                        <Route path=\"/calendar\" component={CalendarPage} exact/>\n                    </Switch>\n                </div>\n                <Footer />\n            </BrowserRouter>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport '@material-ui/core';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}